{
  "kind": "parse",
  "sql_stmt_list": {
    "kind": "sql_stmt_list",
    "sql_stmt_list_002": [
      {
        "kind": "sql_stmt_list_001",
        "sql_stmt": {
          "kind": "sql_stmt",
          "create_or_replace_procedure": {
            "kind": "create_or_replace_procedure",
            "create_replace": {
              "kind": "create_replace",
              "CREATE": "CREATE",
              "create_replace_001": {
                "kind": "create_replace_001",
                "OR": "OR",
                "REPLACE": "REPLACE"
              }
            },
            "PROCEDURE": "PROCEDURE",
            "proc_name": {
              "kind": "proc_name",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "TPCDI_STG"
                },
                "name_002": [
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "PUBLIC"
                    }
                  },
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "LOAD_ACCOUNT_SP"
                    }
                  }
                ]
              }
            },
            "LEFT_PAREN": "(",
            "name_datatype_list": {
              "kind": "name_datatype_list",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "scale"
                }
              },
              "data_type": {
                "kind": "data_type",
                "numeric": {
                  "kind": "numeric",
                  "FLOAT": "float"
                }
              },
              "name_datatype_list_002": [
                {
                  "kind": "name_datatype_list_001",
                  "COMMA": ",",
                  "name": {
                    "kind": "name",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "batches"
                    }
                  },
                  "data_type": {
                    "kind": "data_type",
                    "numeric": {
                      "kind": "numeric",
                      "FLOAT": "float"
                    }
                  }
                },
                {
                  "kind": "name_datatype_list_001",
                  "COMMA": ",",
                  "name": {
                    "kind": "name",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "wait"
                    }
                  },
                  "data_type": {
                    "kind": "data_type",
                    "numeric": {
                      "kind": "numeric",
                      "FLOAT": "float"
                    }
                  }
                }
              ]
            },
            "RIGHT_PAREN": ")",
            "RETURNS": "returns",
            "create_or_replace_procedure_001": {
              "kind": "create_or_replace_procedure_001",
              "create_or_replace_procedure_001_000_001": {
                "kind": "create_or_replace_procedure_001_000_001",
                "data_type": {
                  "kind": "data_type",
                  "string_binary": {
                    "kind": "string_binary",
                    "STRING": "string"
                  }
                }
              }
            },
            "LANGUAGE": "language",
            "create_or_replace_procedure_002": {
              "kind": "create_or_replace_procedure_002",
              "JAVASCRIPT": "javascript"
            },
            "AS": "AS",
            "MULTILINEJS": "  $$\n  var tpcdi_scale = SCALE\n  // Load incremental files\t\n  var batch_counter = 3;\n  while (batch_counter <= BATCHES)\n  {\n    var incrm_stmt = snowflake.createStatement(\n      {sqlText: \"COPY INTO TPCDI_STG.PUBLIC.ACCOUNT_STG FROM @TPCDI_FILES/tmp/tpcdi/sf=\" + tpcdi_scale + \"/Batch\" + batch_counter + \"/Account FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE') ON_ERROR = SKIP_FILE\"}\n      );\n    incrm_stmt.execute();\n    // insert wait here\n    stmt = snowflake.createStatement({sqlText:\"call system$wait(\" + WAIT + \", 'SECONDS')\"});\n    rs = stmt.execute();\t\n    batch_counter++\n  }\n  // Suspend Load Task\n  var task_stmt = snowflake.createStatement({sqlText: \"ALTER TASK TPCDI_STG.PUBLIC.LOAD_ACCOUNT_I_\" + tpcdi_scale + \"_TSK SUSPEND\"});\n  task_stmt.execute();\n  return \"All account files have been loaded.\";\n  $$"
          }
        },
        "SEMICOLON": ";"
      },
      {
        "kind": "sql_stmt_list_001",
        "sql_stmt": {
          "kind": "sql_stmt",
          "create_or_replace_procedure": {
            "kind": "create_or_replace_procedure",
            "create_replace": {
              "kind": "create_replace",
              "CREATE": "CREATE",
              "create_replace_001": {
                "kind": "create_replace_001",
                "OR": "OR",
                "REPLACE": "REPLACE"
              }
            },
            "PROCEDURE": "PROCEDURE",
            "proc_name": {
              "kind": "proc_name",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "TPCDI_STG"
                },
                "name_002": [
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "PUBLIC"
                    }
                  },
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "LOAD_CASHTRANSACTION_H_SP"
                    }
                  }
                ]
              }
            },
            "LEFT_PAREN": "(",
            "name_datatype_list": {
              "kind": "name_datatype_list",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "scale"
                }
              },
              "data_type": {
                "kind": "data_type",
                "numeric": {
                  "kind": "numeric",
                  "FLOAT": "float"
                }
              }
            },
            "RIGHT_PAREN": ")",
            "RETURNS": "returns",
            "create_or_replace_procedure_001": {
              "kind": "create_or_replace_procedure_001",
              "create_or_replace_procedure_001_000_001": {
                "kind": "create_or_replace_procedure_001_000_001",
                "data_type": {
                  "kind": "data_type",
                  "numeric": {
                    "kind": "numeric",
                    "FLOAT": "float"
                  }
                }
              }
            },
            "LANGUAGE": "language",
            "create_or_replace_procedure_002": {
              "kind": "create_or_replace_procedure_002",
              "JAVASCRIPT": "javascript"
            },
            "AS": "AS",
            "MULTILINEJS": "        $$\n        var tpcdi_scale = SCALE\n        // Load historical file\n        var hist_stmt = snowflake.createStatement(\n                {sqlText: \"COPY INTO TPCDI_STG.PUBLIC.CASHTRANSACTION_STG(CT_CA_ID,CT_DTS,CT_AMT,CT_NAME) FROM (SELECT $1 $3    ,$2 $4  ,$3 $5  ,$4 $6 FROM @TPCDI_FILES/tmp/tpcdi/sf=\" + tpcdi_scale + \"/Batch1/CashTransaction) FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE') ON_ERROR = SKIP_FILE\"}\n                );\n        hist_stmt.execute();\n        // Stop task\n        var stoptask_stmt = snowflake.createStatement({sqlText: \"ALTER TASK TPCDI_STG.PUBLIC.LOAD_CASHTRANSACTION_H_\" + tpcdi_scale + \"_TSK SUSPEND\"});\n        stoptask_stmt.execute();\n        return \"All historical cashtransaction files have been loaded.\";\n        $$"
          }
        },
        "SEMICOLON": ";"
      },
      {
        "kind": "sql_stmt_list_001",
        "sql_stmt": {
          "kind": "sql_stmt",
          "create_or_replace_procedure": {
            "kind": "create_or_replace_procedure",
            "create_replace": {
              "kind": "create_replace",
              "CREATE": "CREATE",
              "create_replace_001": {
                "kind": "create_replace_001",
                "OR": "OR",
                "REPLACE": "REPLACE"
              }
            },
            "PROCEDURE": "PROCEDURE",
            "proc_name": {
              "kind": "proc_name",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "TPCDI_STG"
                },
                "name_002": [
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "PUBLIC"
                    }
                  },
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "LOAD_CASHTRANSACTION_I_SP"
                    }
                  }
                ]
              }
            },
            "LEFT_PAREN": "(",
            "name_datatype_list": {
              "kind": "name_datatype_list",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "scale"
                }
              },
              "data_type": {
                "kind": "data_type",
                "numeric": {
                  "kind": "numeric",
                  "FLOAT": "float"
                }
              },
              "name_datatype_list_002": [
                {
                  "kind": "name_datatype_list_001",
                  "COMMA": ",",
                  "name": {
                    "kind": "name",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "batches"
                    }
                  },
                  "data_type": {
                    "kind": "data_type",
                    "numeric": {
                      "kind": "numeric",
                      "FLOAT": "float"
                    }
                  }
                },
                {
                  "kind": "name_datatype_list_001",
                  "COMMA": ",",
                  "name": {
                    "kind": "name",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "wait"
                    }
                  },
                  "data_type": {
                    "kind": "data_type",
                    "numeric": {
                      "kind": "numeric",
                      "FLOAT": "float"
                    }
                  }
                }
              ]
            },
            "RIGHT_PAREN": ")",
            "RETURNS": "returns",
            "create_or_replace_procedure_001": {
              "kind": "create_or_replace_procedure_001",
              "create_or_replace_procedure_001_000_001": {
                "kind": "create_or_replace_procedure_001_000_001",
                "data_type": {
                  "kind": "data_type",
                  "numeric": {
                    "kind": "numeric",
                    "FLOAT": "float"
                  }
                }
              }
            },
            "LANGUAGE": "language",
            "create_or_replace_procedure_002": {
              "kind": "create_or_replace_procedure_002",
              "JAVASCRIPT": "javascript"
            },
            "AS": "AS",
            "MULTILINEJS": "        $$\n        var tpcdi_scale = SCALE\n        // Load incremental files\n        var batch_counter = 1;\n        while (batch_counter <= BATCHES)\n        {\n                var incrm_stmt = snowflake.createStatement(\n                        {sqlText: \"COPY INTO TPCDI_STG.PUBLIC.CASHTRANSACTION_STG FROM @TPCDI_FILES/tmp/tpcdi/sf=\" + tpcdi_scale + \"/Batch\" + batch_counter + \"/CashTransaction FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE') ON_ERROR = SKIP_FILE\"}\n                        );\n                incrm_stmt.execute();\n                // insert wait here\n                stmt = snowflake.createStatement({sqlText:\"call system$wait(\" + WAIT + \", 'SECONDS')\"});\n                rs = stmt.execute();\n                batch_counter++\n        }\n        // Suspend Load Task\n        var task_stmt = snowflake.createStatement({sqlText: \"ALTER TASK TPCDI_STG.PUBLIC.LOAD_CASHTRANSACTION_I_\" + tpcdi_scale + \"_TSK SUSPEND\"});\n        task_stmt.execute();\n        return \"All incremental cashtransaction files have been loaded.\";\n        $$"
          }
        },
        "SEMICOLON": ";"
      },
      {
        "kind": "sql_stmt_list_001",
        "sql_stmt": {
          "kind": "sql_stmt",
          "create_or_replace_procedure": {
            "kind": "create_or_replace_procedure",
            "create_replace": {
              "kind": "create_replace",
              "CREATE": "CREATE",
              "create_replace_001": {
                "kind": "create_replace_001",
                "OR": "OR",
                "REPLACE": "REPLACE"
              }
            },
            "PROCEDURE": "PROCEDURE",
            "proc_name": {
              "kind": "proc_name",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "TPCDI_STG"
                },
                "name_002": [
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "PUBLIC"
                    }
                  },
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "LOAD_CASHTRANSACTION_SP"
                    }
                  }
                ]
              }
            },
            "LEFT_PAREN": "(",
            "name_datatype_list": {
              "kind": "name_datatype_list",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "keywords": {
                    "kind": "keywords",
                    "FILES": "files"
                  }
                }
              },
              "data_type": {
                "kind": "data_type",
                "numeric": {
                  "kind": "numeric",
                  "FLOAT": "float"
                }
              },
              "name_datatype_list_002": [
                {
                  "kind": "name_datatype_list_001",
                  "COMMA": ",",
                  "name": {
                    "kind": "name",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "wait"
                    }
                  },
                  "data_type": {
                    "kind": "data_type",
                    "numeric": {
                      "kind": "numeric",
                      "FLOAT": "float"
                    }
                  }
                }
              ]
            },
            "RIGHT_PAREN": ")",
            "RETURNS": "returns",
            "create_or_replace_procedure_001": {
              "kind": "create_or_replace_procedure_001",
              "create_or_replace_procedure_001_000_001": {
                "kind": "create_or_replace_procedure_001_000_001",
                "data_type": {
                  "kind": "data_type",
                  "numeric": {
                    "kind": "numeric",
                    "FLOAT": "float"
                  }
                }
              }
            },
            "LANGUAGE": "language",
            "create_or_replace_procedure_002": {
              "kind": "create_or_replace_procedure_002",
              "JAVASCRIPT": "javascript"
            },
            "AS": "AS",
            "MULTILINEJS": "        $$\n        // Load historical file\n        var hist_stmt = snowflake.createStatement(\n                {sqlText: \"INSERT INTO TPCDI_STG.PUBLIC.CASHTRANSACTION_STG SELECT       TO_CHAR(NULL) $1       ,ROW_NUMBER() OVER (ORDER BY 1) $2      ,$1 $3  ,$2 $4  ,$3 $5  ,$4 $6 FROM @TPCDI_FILES/load/cash_transaction/CashTransaction01.txt (FILE_FORMAT => 'TXT_PIPE')\"}\n                );\n        hist_stmt.execute();\n        // Insert wait here\n        stmt = snowflake.createStatement({sqlText:\"call system$wait(\" + WAIT + \", 'SECONDS')\"});\n        rs = stmt.execute();\n        // Load incremental files\n        var file_counter = 2;\n        while (file_counter <= FILES)\n        {\n                var incrm_stmt = snowflake.createStatement(\n                        {sqlText: \"COPY INTO TPCDI_STG.PUBLIC.CASHTRANSACTION_STG FROM @TPCDI_FILES/load/cash_transaction/ FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE') PATTERN='.*0\" + file_counter + \".txt' ON_ERROR = SKIP_FILE\"}\n                        );\n                incrm_stmt.execute();\n                // insert wait here\n                stmt = snowflake.createStatement({sqlText:\"call system$wait(\" + WAIT + \", 'SECONDS')\"});\n                rs = stmt.execute();\n                file_counter++\n        }\n        return \"All cashtransaction files have been loaded.\";\n        $$"
          }
        },
        "SEMICOLON": ";"
      },
      {
        "kind": "sql_stmt_list_001",
        "sql_stmt": {
          "kind": "sql_stmt",
          "create_or_replace_procedure": {
            "kind": "create_or_replace_procedure",
            "create_replace": {
              "kind": "create_replace",
              "CREATE": "CREATE",
              "create_replace_001": {
                "kind": "create_replace_001",
                "OR": "OR",
                "REPLACE": "REPLACE"
              }
            },
            "PROCEDURE": "PROCEDURE",
            "proc_name": {
              "kind": "proc_name",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "TPCDI_STG"
                },
                "name_002": [
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "PUBLIC"
                    }
                  },
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "LOAD_CUSTOMER_MGMT_SP"
                    }
                  }
                ]
              }
            },
            "LEFT_PAREN": "(",
            "name_datatype_list": {
              "kind": "name_datatype_list",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "scale"
                }
              },
              "data_type": {
                "kind": "data_type",
                "numeric": {
                  "kind": "numeric",
                  "FLOAT": "float"
                }
              }
            },
            "RIGHT_PAREN": ")",
            "RETURNS": "returns",
            "create_or_replace_procedure_001": {
              "kind": "create_or_replace_procedure_001",
              "create_or_replace_procedure_001_000_001": {
                "kind": "create_or_replace_procedure_001_000_001",
                "data_type": {
                  "kind": "data_type",
                  "string_binary": {
                    "kind": "string_binary",
                    "STRING": "string"
                  }
                }
              }
            },
            "LANGUAGE": "language",
            "create_or_replace_procedure_002": {
              "kind": "create_or_replace_procedure_002",
              "JAVASCRIPT": "javascript"
            },
            "AS": "AS",
            "MULTILINEJS": "  $$\n  var tpcdi_scale = SCALE\n  // Load CUSTOMER_MGMT_STG\n  stmt = snowflake.createStatement(\n      {sqlText: \"COPY INTO TPCDI_STG.PUBLIC.CUSTOMER_MGMT_STG FROM @TPCDI_FILES/tmp/tpcdi/sf=\" + tpcdi_scale + \"/Batch1/CustomerMgmt FILE_FORMAT = (FORMAT_NAME = 'XML') ON_ERROR=CONTINUE\"}\n    );\n  rs = stmt.execute();\n  rs.next();\n  // Stop task\n  var stoptask_stmt = snowflake.createStatement({sqlText: \"ALTER TASK TPCDI_STG.PUBLIC.LOAD_CUSTOMER_MGMT_\" + tpcdi_scale + \"_TSK SUSPEND\"});\n  stoptask_stmt.execute();\n  return \"All customer_mgmt files have been loaded.\";\n  $$"
          }
        },
        "SEMICOLON": ";"
      },
      {
        "kind": "sql_stmt_list_001",
        "sql_stmt": {
          "kind": "sql_stmt",
          "create_or_replace_procedure": {
            "kind": "create_or_replace_procedure",
            "create_replace": {
              "kind": "create_replace",
              "CREATE": "CREATE",
              "create_replace_001": {
                "kind": "create_replace_001",
                "OR": "OR",
                "REPLACE": "REPLACE"
              }
            },
            "PROCEDURE": "PROCEDURE",
            "proc_name": {
              "kind": "proc_name",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "TPCDI_STG"
                },
                "name_002": [
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "PUBLIC"
                    }
                  },
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "LOAD_CUSTOMER_SP"
                    }
                  }
                ]
              }
            },
            "LEFT_PAREN": "(",
            "name_datatype_list": {
              "kind": "name_datatype_list",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "scale"
                }
              },
              "data_type": {
                "kind": "data_type",
                "numeric": {
                  "kind": "numeric",
                  "FLOAT": "float"
                }
              },
              "name_datatype_list_002": [
                {
                  "kind": "name_datatype_list_001",
                  "COMMA": ",",
                  "name": {
                    "kind": "name",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "batches"
                    }
                  },
                  "data_type": {
                    "kind": "data_type",
                    "numeric": {
                      "kind": "numeric",
                      "FLOAT": "float"
                    }
                  }
                },
                {
                  "kind": "name_datatype_list_001",
                  "COMMA": ",",
                  "name": {
                    "kind": "name",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "wait"
                    }
                  },
                  "data_type": {
                    "kind": "data_type",
                    "numeric": {
                      "kind": "numeric",
                      "FLOAT": "float"
                    }
                  }
                }
              ]
            },
            "RIGHT_PAREN": ")",
            "RETURNS": "returns",
            "create_or_replace_procedure_001": {
              "kind": "create_or_replace_procedure_001",
              "create_or_replace_procedure_001_000_001": {
                "kind": "create_or_replace_procedure_001_000_001",
                "data_type": {
                  "kind": "data_type",
                  "string_binary": {
                    "kind": "string_binary",
                    "STRING": "string"
                  }
                }
              }
            },
            "LANGUAGE": "language",
            "create_or_replace_procedure_002": {
              "kind": "create_or_replace_procedure_002",
              "JAVASCRIPT": "javascript"
            },
            "AS": "AS",
            "MULTILINEJS": "  $$\n  var tpcdi_scale = SCALE\n  // Load incremental files\n  var batch_counter = 1;\n  while (batch_counter <= BATCHES)\n  {\n    var incrm_stmt = snowflake.createStatement(\n      {sqlText: \"COPY INTO TPCDI_STG.PUBLIC.CUSTOMER_STG FROM @TPCDI_FILES/tmp/tpcdi/sf=\" + tpcdi_scale + \"/Batch\" + batch_counter + \"/Customer FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE') ON_ERROR = SKIP_FILE\"}\n      );\n    incrm_stmt.execute();\n    // insert wait here\n    stmt = snowflake.createStatement({sqlText:\"call system$wait(\" + WAIT + \", 'SECONDS')\"});\n    rs = stmt.execute();\n    batch_counter++\n  }\n  // Suspend Load Task\n  var task_stmt = snowflake.createStatement({sqlText: \"ALTER TASK TPCDI_STG.PUBLIC.LOAD_CUSTOMER_I_\" + tpcdi_scale + \"_TSK SUSPEND\"});\n  task_stmt.execute();\n  return \"All customer files have been loaded.\";\n  $$"
          }
        },
        "SEMICOLON": ";"
      },
      {
        "kind": "sql_stmt_list_001",
        "sql_stmt": {
          "kind": "sql_stmt",
          "create_or_replace_procedure": {
            "kind": "create_or_replace_procedure",
            "create_replace": {
              "kind": "create_replace",
              "CREATE": "CREATE",
              "create_replace_001": {
                "kind": "create_replace_001",
                "OR": "OR",
                "REPLACE": "REPLACE"
              }
            },
            "PROCEDURE": "PROCEDURE",
            "proc_name": {
              "kind": "proc_name",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "TPCDI_STG"
                },
                "name_002": [
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "PUBLIC"
                    }
                  },
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "LOAD_DAILYMARKET_H_SP"
                    }
                  }
                ]
              }
            },
            "LEFT_PAREN": "(",
            "name_datatype_list": {
              "kind": "name_datatype_list",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "scale"
                }
              },
              "data_type": {
                "kind": "data_type",
                "numeric": {
                  "kind": "numeric",
                  "FLOAT": "float"
                }
              }
            },
            "RIGHT_PAREN": ")",
            "RETURNS": "returns",
            "create_or_replace_procedure_001": {
              "kind": "create_or_replace_procedure_001",
              "create_or_replace_procedure_001_000_001": {
                "kind": "create_or_replace_procedure_001_000_001",
                "data_type": {
                  "kind": "data_type",
                  "numeric": {
                    "kind": "numeric",
                    "FLOAT": "float"
                  }
                }
              }
            },
            "LANGUAGE": "language",
            "create_or_replace_procedure_002": {
              "kind": "create_or_replace_procedure_002",
              "JAVASCRIPT": "javascript"
            },
            "AS": "AS",
            "MULTILINEJS": "        $$\n        var tpcdi_scale = SCALE\n        // Load historical file\n        var hist_stmt = snowflake.createStatement(\n                {sqlText: \"COPY INTO TPCDI_STG.PUBLIC.DAILYMARKET_STG(DM_DATE,DM_S_SYMB,DM_CLOSE,DM_HIGH,DM_LOW,DM_VOL) FROM (SELECT $1 $3      ,$2 $4  ,$3 $5  ,$4 $6  ,$5 $7  ,$6 $8 FROM @TPCDI_FILES/tmp/tpcdi/sf=\" + tpcdi_scale + \"/Batch1/DailyMarket) FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE') ON_ERROR = SKIP_FILE\"}\n                );\n        hist_stmt.execute();\n        // Stop task\n        var stoptask_stmt = snowflake.createStatement({sqlText: \"ALTER TASK TPCDI_STG.PUBLIC.LOAD_DAILYMARKET_H_\" + tpcdi_scale + \"_TSK SUSPEND\"});\n        stoptask_stmt.execute();\n        return \"All historical dailymarket files have been loaded.\";\n        $$"
          }
        },
        "SEMICOLON": ";"
      },
      {
        "kind": "sql_stmt_list_001",
        "sql_stmt": {
          "kind": "sql_stmt",
          "create_or_replace_procedure": {
            "kind": "create_or_replace_procedure",
            "create_replace": {
              "kind": "create_replace",
              "CREATE": "CREATE",
              "create_replace_001": {
                "kind": "create_replace_001",
                "OR": "OR",
                "REPLACE": "REPLACE"
              }
            },
            "PROCEDURE": "PROCEDURE",
            "proc_name": {
              "kind": "proc_name",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "TPCDI_STG"
                },
                "name_002": [
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "PUBLIC"
                    }
                  },
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "LOAD_DAILYMARKET_I_SP"
                    }
                  }
                ]
              }
            },
            "LEFT_PAREN": "(",
            "name_datatype_list": {
              "kind": "name_datatype_list",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "scale"
                }
              },
              "data_type": {
                "kind": "data_type",
                "numeric": {
                  "kind": "numeric",
                  "FLOAT": "float"
                }
              },
              "name_datatype_list_002": [
                {
                  "kind": "name_datatype_list_001",
                  "COMMA": ",",
                  "name": {
                    "kind": "name",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "batches"
                    }
                  },
                  "data_type": {
                    "kind": "data_type",
                    "numeric": {
                      "kind": "numeric",
                      "FLOAT": "float"
                    }
                  }
                },
                {
                  "kind": "name_datatype_list_001",
                  "COMMA": ",",
                  "name": {
                    "kind": "name",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "wait"
                    }
                  },
                  "data_type": {
                    "kind": "data_type",
                    "numeric": {
                      "kind": "numeric",
                      "FLOAT": "float"
                    }
                  }
                }
              ]
            },
            "RIGHT_PAREN": ")",
            "RETURNS": "returns",
            "create_or_replace_procedure_001": {
              "kind": "create_or_replace_procedure_001",
              "create_or_replace_procedure_001_000_001": {
                "kind": "create_or_replace_procedure_001_000_001",
                "data_type": {
                  "kind": "data_type",
                  "numeric": {
                    "kind": "numeric",
                    "FLOAT": "float"
                  }
                }
              }
            },
            "LANGUAGE": "language",
            "create_or_replace_procedure_002": {
              "kind": "create_or_replace_procedure_002",
              "JAVASCRIPT": "javascript"
            },
            "AS": "AS",
            "MULTILINEJS": "        $$\n        var tpcdi_scale = SCALE\n        // Load incremental files\n        var batch_counter = 1;\n        while (batch_counter <= BATCHES)\n        {\n                var incrm_stmt = snowflake.createStatement(\n                        {sqlText: \"COPY INTO TPCDI_STG.PUBLIC.DAILYMARKET_STG FROM @TPCDI_FILES/tmp/tpcdi/sf=\" + tpcdi_scale + \"/Batch\" + batch_counter + \"/DailyMarket FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE') ON_ERROR = SKIP_FILE\"}\n                        );\n                incrm_stmt.execute();\n                // insert wait here\n                stmt = snowflake.createStatement({sqlText:\"call system$wait(\" + WAIT + \", 'SECONDS')\"});\n                rs = stmt.execute();\n                batch_counter++\n        }\n        // Suspend Load Task\n        var task_stmt = snowflake.createStatement({sqlText: \"ALTER TASK TPCDI_STG.PUBLIC.LOAD_DAILYMARKET_I_\" + tpcdi_scale + \"_TSK SUSPEND\"});\n        task_stmt.execute();\n        return \"All incremental dailymarket files have been loaded.\";\n        $$"
          }
        },
        "SEMICOLON": ";"
      },
      {
        "kind": "sql_stmt_list_001",
        "sql_stmt": {
          "kind": "sql_stmt",
          "create_or_replace_procedure": {
            "kind": "create_or_replace_procedure",
            "create_replace": {
              "kind": "create_replace",
              "CREATE": "CREATE",
              "create_replace_001": {
                "kind": "create_replace_001",
                "OR": "OR",
                "REPLACE": "REPLACE"
              }
            },
            "PROCEDURE": "PROCEDURE",
            "proc_name": {
              "kind": "proc_name",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "TPCDI_STG"
                },
                "name_002": [
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "PUBLIC"
                    }
                  },
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "LOAD_DAILYMARKET_SP"
                    }
                  }
                ]
              }
            },
            "LEFT_PAREN": "(",
            "name_datatype_list": {
              "kind": "name_datatype_list",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "keywords": {
                    "kind": "keywords",
                    "FILES": "files"
                  }
                }
              },
              "data_type": {
                "kind": "data_type",
                "numeric": {
                  "kind": "numeric",
                  "FLOAT": "float"
                }
              },
              "name_datatype_list_002": [
                {
                  "kind": "name_datatype_list_001",
                  "COMMA": ",",
                  "name": {
                    "kind": "name",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "wait"
                    }
                  },
                  "data_type": {
                    "kind": "data_type",
                    "numeric": {
                      "kind": "numeric",
                      "FLOAT": "float"
                    }
                  }
                }
              ]
            },
            "RIGHT_PAREN": ")",
            "RETURNS": "returns",
            "create_or_replace_procedure_001": {
              "kind": "create_or_replace_procedure_001",
              "create_or_replace_procedure_001_000_001": {
                "kind": "create_or_replace_procedure_001_000_001",
                "data_type": {
                  "kind": "data_type",
                  "numeric": {
                    "kind": "numeric",
                    "FLOAT": "float"
                  }
                }
              }
            },
            "LANGUAGE": "language",
            "create_or_replace_procedure_002": {
              "kind": "create_or_replace_procedure_002",
              "JAVASCRIPT": "javascript"
            },
            "AS": "AS",
            "MULTILINEJS": "        $$\n        // Load historical file\n        var hist_stmt = snowflake.createStatement(\n                {sqlText: \"INSERT INTO TPCDI_STG.PUBLIC.DAILYMARKET_STG SELECT   TO_CHAR(NULL) $1       ,ROW_NUMBER() OVER (ORDER BY 1) $2      ,$1 $3  ,$2 $4  ,$3 $5  ,$4 $6  ,$5 $7  ,$6 $8 FROM @TPCDI_FILES/load/daily_market/DailyMarket01.txt (FILE_FORMAT => 'TXT_PIPE')\"}\n                );\n        hist_stmt.execute();\n        // Insert wait here\n        stmt = snowflake.createStatement({sqlText:\"call system$wait(\" + WAIT + \", 'SECONDS')\"});\n        rs = stmt.execute();\n        // Load incremental files\n        var file_counter = 2;\n        while (file_counter <= FILES)\n        {\n                var incrm_stmt = snowflake.createStatement(\n                        {sqlText: \"COPY INTO TPCDI_STG.PUBLIC.DAILYMARKET_STG FROM @TPCDI_FILES/load/daily_market/ FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE') PATTERN='.*0\" + file_counter + \".txt' ON_ERROR = SKIP_FILE\"}\n                        );\n                incrm_stmt.execute();\n                // insert wait here\n                stmt = snowflake.createStatement({sqlText:\"call system$wait(\" + WAIT + \", 'SECONDS')\"});\n                rs = stmt.execute();\n                file_counter++\n        }\n        return \"All dailymarket files have been loaded.\";\n        $$"
          }
        },
        "SEMICOLON": ";"
      },
      {
        "kind": "sql_stmt_list_001",
        "sql_stmt": {
          "kind": "sql_stmt",
          "create_or_replace_procedure": {
            "kind": "create_or_replace_procedure",
            "create_replace": {
              "kind": "create_replace",
              "CREATE": "CREATE",
              "create_replace_001": {
                "kind": "create_replace_001",
                "OR": "OR",
                "REPLACE": "REPLACE"
              }
            },
            "PROCEDURE": "PROCEDURE",
            "proc_name": {
              "kind": "proc_name",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "TPCDI_STG"
                },
                "name_002": [
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "PUBLIC"
                    }
                  },
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "LOAD_DATE_SP"
                    }
                  }
                ]
              }
            },
            "LEFT_PAREN": "(",
            "name_datatype_list": {
              "kind": "name_datatype_list",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "scale"
                }
              },
              "data_type": {
                "kind": "data_type",
                "numeric": {
                  "kind": "numeric",
                  "FLOAT": "float"
                }
              }
            },
            "RIGHT_PAREN": ")",
            "RETURNS": "returns",
            "create_or_replace_procedure_001": {
              "kind": "create_or_replace_procedure_001",
              "create_or_replace_procedure_001_000_001": {
                "kind": "create_or_replace_procedure_001_000_001",
                "data_type": {
                  "kind": "data_type",
                  "string_binary": {
                    "kind": "string_binary",
                    "STRING": "string"
                  }
                }
              }
            },
            "LANGUAGE": "language",
            "create_or_replace_procedure_002": {
              "kind": "create_or_replace_procedure_002",
              "JAVASCRIPT": "javascript"
            },
            "AS": "AS",
            "MULTILINEJS": "  $$\n  var tpcdi_scale = SCALE\n  // Load DATE_STG\n  stmt = snowflake.createStatement(\n      {sqlText: \"COPY INTO TPCDI_STG.PUBLIC.DATE_STG FROM @TPCDI_FILES/tmp/tpcdi/sf=\" + tpcdi_scale + \"/Batch1/Date.txt FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE') ON_ERROR = SKIP_FILE\"}\n    );\n  rs = stmt.execute();\n  rs.next();\n  // Stop task\n  var stoptask_stmt = snowflake.createStatement({sqlText: \"ALTER TASK TPCDI_STG.PUBLIC.LOAD_DATE_\" + tpcdi_scale + \"_TSK SUSPEND\"});\n  stoptask_stmt.execute();\n  return \"All date files have been loaded.\";\n  $$"
          }
        },
        "SEMICOLON": ";"
      },
      {
        "kind": "sql_stmt_list_001",
        "sql_stmt": {
          "kind": "sql_stmt",
          "create_or_replace_procedure": {
            "kind": "create_or_replace_procedure",
            "create_replace": {
              "kind": "create_replace",
              "CREATE": "CREATE",
              "create_replace_001": {
                "kind": "create_replace_001",
                "OR": "OR",
                "REPLACE": "REPLACE"
              }
            },
            "PROCEDURE": "PROCEDURE",
            "proc_name": {
              "kind": "proc_name",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "TPCDI_STG"
                },
                "name_002": [
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "PUBLIC"
                    }
                  },
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "LOAD_FINWIRE_SP"
                    }
                  }
                ]
              }
            },
            "LEFT_PAREN": "(",
            "name_datatype_list": {
              "kind": "name_datatype_list",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "scale"
                }
              },
              "data_type": {
                "kind": "data_type",
                "numeric": {
                  "kind": "numeric",
                  "FLOAT": "float"
                }
              }
            },
            "RIGHT_PAREN": ")",
            "RETURNS": "returns",
            "create_or_replace_procedure_001": {
              "kind": "create_or_replace_procedure_001",
              "create_or_replace_procedure_001_000_001": {
                "kind": "create_or_replace_procedure_001_000_001",
                "data_type": {
                  "kind": "data_type",
                  "string_binary": {
                    "kind": "string_binary",
                    "STRING": "string"
                  }
                }
              }
            },
            "LANGUAGE": "language",
            "create_or_replace_procedure_002": {
              "kind": "create_or_replace_procedure_002",
              "JAVASCRIPT": "javascript"
            },
            "AS": "AS",
            "MULTILINEJS": "  $$\n   // Load incremental files\n  var tpcdi_scale = SCALE;\n  var batch_counter = 1;\n  var BATCHES = 3;\n  var WAIT = 60;\n  while (batch_counter <= BATCHES)      {\n                // Load All FINWIRE files\n         var incrm_stmt = snowflake.createStatement(\n                {sqlText: \"COPY INTO TPCDI_STG.PUBLIC.FINWIRE_STG FROM ( SELECT SUBSTR($1, 0, 15) PTS, SUBSTR($1, 16, 3) REC_TYPE, SUBSTR($1, 19, 60) COMPANY_NAME, SUBSTR($1, 79, 10) CIK, IFF( SUBSTR($1, 16, 3) = ' CMP', SUBSTR($1, 89, 4), SUBSTR($1, 40, 4) ) STATUS, SUBSTR($1, 93, 2) INDUSTRY_ID, SUBSTR($1, 95, 4) SP_RATING, SUBSTR($1, 99, 8) FOUNDING_DATE, SUBSTR($1, 107, 80) ADDR_LINE1, SUBSTR($1, 187, 80) ADDR_LINE2, SUBSTR($1, 267, 12) POSTAL_CODE, SUBSTR($1, 279, 25) CITY, SUBSTR($1, 304, 20) STATE_PROVINCE, SUBSTR($1, 324, 24) COUNTRY, SUBSTR($1, 348, 46) CEO_NAME, SUBSTR($1, 394, 150) DESCRIPTION, SUBSTR($1, 19, 4) YEAR, SUBSTR($1, 23, 1) QUARTER, SUBSTR($1, 24, 8) QTR_START_DATE, SUBSTR($1, 32, 8) POSTING_DATE, SUBSTR($1, 40, 17) REVENUE, SUBSTR($1, 57, 17) EARNINGS, SUBSTR($1, 74, 12) EPS, SUBSTR($1, 86, 12) DILUTED_EPS, SUBSTR($1, 98, 12) MARGIN, SUBSTR($1, 110, 17) INVENTORY, SUBSTR($1, 127, 17) ASSETS, SUBSTR($1, 144, 17) LIABILITIES, IFF( SUBSTR($1, 16, 3) = 'FIN', SUBSTR($1, 161, 13), SUBSTR($1, 120, 13) ) SH_OUT, SUBSTR($1, 174, 13) DILUTED_SH_OUT, IFF( SUBSTR($1, 16, 3) = 'FIN', SUBSTR($1, 187, 60), SUBSTR($1, 161, 60) ) CO_NAME_OR_CIK, SUBSTR($1, 19, 15) SYMBOL, SUBSTR($1, 34, 6) ISSUE_TYPE, SUBSTR($1, 44, 70) NAME, SUBSTR($1, 114, 6) EX_ID, SUBSTR($1, 133, 8) FIRST_TRADE_DATE, SUBSTR($1, 141, 8) FIRST_TRADE_EXCHG, SUBSTR($1, 149, 12) DIVIDEND FROM @TPCDI_FILES/tmp/tpcdi/sf=\" + tpcdi_scale + \"/Batch\" + batch_counter + \"/FINWIRE) FILE_FORMAT = (FORMAT_NAME = 'TXT_FIXED_WIDTH')  PATTERN = '^(?:(?!csv).)*$' ON_ERROR = SKIP_FILE\"}\n         );\n         incrm_stmt.execute();\n         // insert wait here\n    stmt = snowflake.createStatement({sqlText:\"call system$wait(\" + WAIT + \", 'SECONDS')\"});\n    rs = stmt.execute();\n    batch_counter++\n        }\n\n  return \"All FINWIRE files have been loaded.\";\n  $$"
          }
        },
        "SEMICOLON": ";"
      },
      {
        "kind": "sql_stmt_list_001",
        "sql_stmt": {
          "kind": "sql_stmt",
          "create_or_replace_procedure": {
            "kind": "create_or_replace_procedure",
            "create_replace": {
              "kind": "create_replace",
              "CREATE": "CREATE",
              "create_replace_001": {
                "kind": "create_replace_001",
                "OR": "OR",
                "REPLACE": "REPLACE"
              }
            },
            "PROCEDURE": "PROCEDURE",
            "proc_name": {
              "kind": "proc_name",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "TPCDI_STG"
                },
                "name_002": [
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "PUBLIC"
                    }
                  },
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "LOAD_HOLDING_HISTORY_H_SP"
                    }
                  }
                ]
              }
            },
            "LEFT_PAREN": "(",
            "name_datatype_list": {
              "kind": "name_datatype_list",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "scale"
                }
              },
              "data_type": {
                "kind": "data_type",
                "numeric": {
                  "kind": "numeric",
                  "FLOAT": "float"
                }
              }
            },
            "RIGHT_PAREN": ")",
            "RETURNS": "returns",
            "create_or_replace_procedure_001": {
              "kind": "create_or_replace_procedure_001",
              "create_or_replace_procedure_001_000_001": {
                "kind": "create_or_replace_procedure_001_000_001",
                "data_type": {
                  "kind": "data_type",
                  "numeric": {
                    "kind": "numeric",
                    "FLOAT": "float"
                  }
                }
              }
            },
            "LANGUAGE": "language",
            "create_or_replace_procedure_002": {
              "kind": "create_or_replace_procedure_002",
              "JAVASCRIPT": "javascript"
            },
            "AS": "AS",
            "MULTILINEJS": "        $$\n        var tpcdi_scale = SCALE\n        // Load historical file\n        var hist_stmt = snowflake.createStatement(\n                {sqlText: \"COPY INTO TPCDI_STG.PUBLIC.HOLDINGHISTORY_STG(HH_H_T_ID,HH_T_ID,HH_BEFORE_QTY,HH_AFTER_QTY) FROM (SELECT $1 $3       ,$2 $4  ,$3 $5  ,$4 $6 FROM @TPCDI_FILES/tmp/tpcdi/sf=\" + tpcdi_scale + \"/Batch1/HoldingHistory) FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE') ON_ERROR = SKIP_FILE\"}\n                );\n        hist_stmt.execute();\n        // Stop task\n        var stoptask_stmt = snowflake.createStatement({sqlText: \"ALTER TASK TPCDI_STG.PUBLIC.LOAD_HOLDING_HISTORY_H_\" + tpcdi_scale + \"_TSK SUSPEND\"});\n        stoptask_stmt.execute();\n        return \"All historical holding history files have been loaded.\";\n        $$"
          }
        },
        "SEMICOLON": ";"
      },
      {
        "kind": "sql_stmt_list_001",
        "sql_stmt": {
          "kind": "sql_stmt",
          "create_or_replace_procedure": {
            "kind": "create_or_replace_procedure",
            "create_replace": {
              "kind": "create_replace",
              "CREATE": "CREATE",
              "create_replace_001": {
                "kind": "create_replace_001",
                "OR": "OR",
                "REPLACE": "REPLACE"
              }
            },
            "PROCEDURE": "PROCEDURE",
            "proc_name": {
              "kind": "proc_name",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "TPCDI_STG"
                },
                "name_002": [
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "PUBLIC"
                    }
                  },
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "LOAD_HOLDING_HISTORY_I_SP"
                    }
                  }
                ]
              }
            },
            "LEFT_PAREN": "(",
            "name_datatype_list": {
              "kind": "name_datatype_list",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "scale"
                }
              },
              "data_type": {
                "kind": "data_type",
                "numeric": {
                  "kind": "numeric",
                  "FLOAT": "float"
                }
              },
              "name_datatype_list_002": [
                {
                  "kind": "name_datatype_list_001",
                  "COMMA": ",",
                  "name": {
                    "kind": "name",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "batches"
                    }
                  },
                  "data_type": {
                    "kind": "data_type",
                    "numeric": {
                      "kind": "numeric",
                      "FLOAT": "float"
                    }
                  }
                },
                {
                  "kind": "name_datatype_list_001",
                  "COMMA": ",",
                  "name": {
                    "kind": "name",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "wait"
                    }
                  },
                  "data_type": {
                    "kind": "data_type",
                    "numeric": {
                      "kind": "numeric",
                      "FLOAT": "float"
                    }
                  }
                }
              ]
            },
            "RIGHT_PAREN": ")",
            "RETURNS": "returns",
            "create_or_replace_procedure_001": {
              "kind": "create_or_replace_procedure_001",
              "create_or_replace_procedure_001_000_001": {
                "kind": "create_or_replace_procedure_001_000_001",
                "data_type": {
                  "kind": "data_type",
                  "numeric": {
                    "kind": "numeric",
                    "FLOAT": "float"
                  }
                }
              }
            },
            "LANGUAGE": "language",
            "create_or_replace_procedure_002": {
              "kind": "create_or_replace_procedure_002",
              "JAVASCRIPT": "javascript"
            },
            "AS": "AS",
            "MULTILINEJS": "        $$\n        var tpcdi_scale = SCALE\n        // Load incremental files\n        var batch_counter = 1;\n        while (batch_counter <= BATCHES)\n        {\n                var incrm_stmt = snowflake.createStatement(\n                        {sqlText: \"COPY INTO TPCDI_STG.PUBLIC.HOLDINGHISTORY_STG FROM @TPCDI_FILES/tmp/tpcdi/sf=\" + tpcdi_scale + \"/Batch\" + batch_counter + \"/HoldingHistory FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE') ON_ERROR = SKIP_FILE\"}\n                        );\n                incrm_stmt.execute();\n                // insert wait here\n                stmt = snowflake.createStatement({sqlText:\"call system$wait(\" + WAIT + \", 'SECONDS')\"});\n                rs = stmt.execute();\n                batch_counter++\n        }\n        // Suspend Load Task\n        var task_stmt = snowflake.createStatement({sqlText: \"ALTER TASK TPCDI_STG.PUBLIC.LOAD_HOLDING_HISTORY_I_\" + tpcdi_scale + \"_TSK SUSPEND\"});\n        task_stmt.execute();\n        return \"All incremental holding history files have been loaded.\";\n        $$"
          }
        },
        "SEMICOLON": ";"
      },
      {
        "kind": "sql_stmt_list_001",
        "sql_stmt": {
          "kind": "sql_stmt",
          "create_or_replace_procedure": {
            "kind": "create_or_replace_procedure",
            "create_replace": {
              "kind": "create_replace",
              "CREATE": "CREATE",
              "create_replace_001": {
                "kind": "create_replace_001",
                "OR": "OR",
                "REPLACE": "REPLACE"
              }
            },
            "PROCEDURE": "PROCEDURE",
            "proc_name": {
              "kind": "proc_name",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "TPCDI_STG"
                },
                "name_002": [
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "PUBLIC"
                    }
                  },
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "LOAD_HOLDING_HISTORY_SP"
                    }
                  }
                ]
              }
            },
            "LEFT_PAREN": "(",
            "name_datatype_list": {
              "kind": "name_datatype_list",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "keywords": {
                    "kind": "keywords",
                    "FILES": "files"
                  }
                }
              },
              "data_type": {
                "kind": "data_type",
                "numeric": {
                  "kind": "numeric",
                  "FLOAT": "float"
                }
              },
              "name_datatype_list_002": [
                {
                  "kind": "name_datatype_list_001",
                  "COMMA": ",",
                  "name": {
                    "kind": "name",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "wait"
                    }
                  },
                  "data_type": {
                    "kind": "data_type",
                    "numeric": {
                      "kind": "numeric",
                      "FLOAT": "float"
                    }
                  }
                }
              ]
            },
            "RIGHT_PAREN": ")",
            "RETURNS": "returns",
            "create_or_replace_procedure_001": {
              "kind": "create_or_replace_procedure_001",
              "create_or_replace_procedure_001_000_001": {
                "kind": "create_or_replace_procedure_001_000_001",
                "data_type": {
                  "kind": "data_type",
                  "numeric": {
                    "kind": "numeric",
                    "FLOAT": "float"
                  }
                }
              }
            },
            "LANGUAGE": "language",
            "create_or_replace_procedure_002": {
              "kind": "create_or_replace_procedure_002",
              "JAVASCRIPT": "javascript"
            },
            "AS": "AS",
            "MULTILINEJS": "        $$\n        // Load historical file\n        var hist_stmt = snowflake.createStatement(\n                {sqlText: \"INSERT INTO TPCDI_STG.PUBLIC.HOLDINGHISTORY_STG SELECT        TO_CHAR(NULL) $1       ,ROW_NUMBER() OVER (ORDER BY 1) $2      ,$1 $3  ,$2 $4  ,$3 $5  ,$4 $6 FROM @TPCDI_FILES/load/holding_history/HoldingHistory01.txt (FILE_FORMAT => 'TXT_PIPE')\"}\n                );\n        hist_stmt.execute();\n        // Insert wait here\n        stmt = snowflake.createStatement({sqlText:\"call system$wait(\" + WAIT + \", 'SECONDS')\"});\n        rs = stmt.execute();\n        // Load incremental files\n        var file_counter = 2;\n        while (file_counter <= FILES)\n        {\n                var incrm_stmt = snowflake.createStatement(\n                        {sqlText: \"COPY INTO TPCDI_STG.PUBLIC.HOLDINGHISTORY_STG FROM @TPCDI_FILES/load/holding_history/ FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE') PATTERN='.*0\" + file_counter + \".txt' ON_ERROR = SKIP_FILE\"}\n                        );\n                incrm_stmt.execute();\n                // insert wait here\n                stmt = snowflake.createStatement({sqlText:\"call system$wait(\" + WAIT + \", 'SECONDS')\"});\n                rs = stmt.execute();\n                file_counter++\n        }\n        return \"All holding history files have been loaded.\";\n        $$"
          }
        },
        "SEMICOLON": ";"
      },
      {
        "kind": "sql_stmt_list_001",
        "sql_stmt": {
          "kind": "sql_stmt",
          "create_or_replace_procedure": {
            "kind": "create_or_replace_procedure",
            "create_replace": {
              "kind": "create_replace",
              "CREATE": "CREATE",
              "create_replace_001": {
                "kind": "create_replace_001",
                "OR": "OR",
                "REPLACE": "REPLACE"
              }
            },
            "PROCEDURE": "PROCEDURE",
            "proc_name": {
              "kind": "proc_name",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "TPCDI_STG"
                },
                "name_002": [
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "PUBLIC"
                    }
                  },
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "LOAD_HR_SP"
                    }
                  }
                ]
              }
            },
            "LEFT_PAREN": "(",
            "name_datatype_list": {
              "kind": "name_datatype_list",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "scale"
                }
              },
              "data_type": {
                "kind": "data_type",
                "numeric": {
                  "kind": "numeric",
                  "FLOAT": "float"
                }
              }
            },
            "RIGHT_PAREN": ")",
            "RETURNS": "returns",
            "create_or_replace_procedure_001": {
              "kind": "create_or_replace_procedure_001",
              "create_or_replace_procedure_001_000_001": {
                "kind": "create_or_replace_procedure_001_000_001",
                "data_type": {
                  "kind": "data_type",
                  "string_binary": {
                    "kind": "string_binary",
                    "STRING": "string"
                  }
                }
              }
            },
            "LANGUAGE": "language",
            "create_or_replace_procedure_002": {
              "kind": "create_or_replace_procedure_002",
              "JAVASCRIPT": "javascript"
            },
            "AS": "AS",
            "MULTILINEJS": "  $$\n  var tpcdi_scale = SCALE\n  // Load HR_STG\n  stmt = snowflake.createStatement(\n      {sqlText: \"COPY INTO TPCDI_STG.PUBLIC.HR_STG FROM @TPCDI_FILES/tmp/tpcdi/sf=\" + tpcdi_scale + \"/Batch1/HR FILE_FORMAT = (FORMAT_NAME = 'TXT_CSV') ON_ERROR = SKIP_FILE\"}\n    );\n  rs = stmt.execute();\n  rs.next();\n  // Stop task\n  var stoptask_stmt = snowflake.createStatement({sqlText: \"ALTER TASK TPCDI_STG.PUBLIC.LOAD_HR_\" + tpcdi_scale + \"_TSK SUSPEND\"});\n  stoptask_stmt.execute();\n  return \"All HR files have been loaded.\";\n  $$"
          }
        },
        "SEMICOLON": ";"
      },
      {
        "kind": "sql_stmt_list_001",
        "sql_stmt": {
          "kind": "sql_stmt",
          "create_or_replace_procedure": {
            "kind": "create_or_replace_procedure",
            "create_replace": {
              "kind": "create_replace",
              "CREATE": "CREATE",
              "create_replace_001": {
                "kind": "create_replace_001",
                "OR": "OR",
                "REPLACE": "REPLACE"
              }
            },
            "PROCEDURE": "PROCEDURE",
            "proc_name": {
              "kind": "proc_name",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "TPCDI_STG"
                },
                "name_002": [
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "PUBLIC"
                    }
                  },
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "LOAD_INDUSTRY_SP"
                    }
                  }
                ]
              }
            },
            "LEFT_PAREN": "(",
            "name_datatype_list": {
              "kind": "name_datatype_list",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "scale"
                }
              },
              "data_type": {
                "kind": "data_type",
                "numeric": {
                  "kind": "numeric",
                  "FLOAT": "float"
                }
              }
            },
            "RIGHT_PAREN": ")",
            "RETURNS": "returns",
            "create_or_replace_procedure_001": {
              "kind": "create_or_replace_procedure_001",
              "create_or_replace_procedure_001_000_001": {
                "kind": "create_or_replace_procedure_001_000_001",
                "data_type": {
                  "kind": "data_type",
                  "string_binary": {
                    "kind": "string_binary",
                    "STRING": "string"
                  }
                }
              }
            },
            "LANGUAGE": "language",
            "create_or_replace_procedure_002": {
              "kind": "create_or_replace_procedure_002",
              "JAVASCRIPT": "javascript"
            },
            "AS": "AS",
            "MULTILINEJS": "  $$\n  var tpcdi_scale = SCALE\n  // Load INDUSTRY_STG\n  stmt = snowflake.createStatement(\n      {sqlText: \"COPY INTO TPCDI_STG.PUBLIC.INDUSTRY_STG FROM @TPCDI_FILES/tmp/tpcdi/sf=\" + tpcdi_scale + \"/Batch1/Industry.txt FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE') ON_ERROR = SKIP_FILE\"}\n    );\n  rs = stmt.execute();\n  rs.next();\n  // Stop task\n  var stoptask_stmt = snowflake.createStatement({sqlText: \"ALTER TASK TPCDI_STG.PUBLIC.LOAD_INDUSTRY_\" + tpcdi_scale + \"_TSK SUSPEND\"});\n  stoptask_stmt.execute();\n  return \"All industry files have been loaded.\";\n  $$"
          }
        },
        "SEMICOLON": ";"
      },
      {
        "kind": "sql_stmt_list_001",
        "sql_stmt": {
          "kind": "sql_stmt",
          "create_or_replace_procedure": {
            "kind": "create_or_replace_procedure",
            "create_replace": {
              "kind": "create_replace",
              "CREATE": "CREATE",
              "create_replace_001": {
                "kind": "create_replace_001",
                "OR": "OR",
                "REPLACE": "REPLACE"
              }
            },
            "PROCEDURE": "PROCEDURE",
            "proc_name": {
              "kind": "proc_name",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "TPCDI_STG"
                },
                "name_002": [
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "PUBLIC"
                    }
                  },
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "LOAD_PROSPECT_H_SP"
                    }
                  }
                ]
              }
            },
            "LEFT_PAREN": "(",
            "name_datatype_list": {
              "kind": "name_datatype_list",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "scale"
                }
              },
              "data_type": {
                "kind": "data_type",
                "numeric": {
                  "kind": "numeric",
                  "FLOAT": "float"
                }
              }
            },
            "RIGHT_PAREN": ")",
            "RETURNS": "returns",
            "create_or_replace_procedure_001": {
              "kind": "create_or_replace_procedure_001",
              "create_or_replace_procedure_001_000_001": {
                "kind": "create_or_replace_procedure_001_000_001",
                "data_type": {
                  "kind": "data_type",
                  "numeric": {
                    "kind": "numeric",
                    "FLOAT": "float"
                  }
                }
              }
            },
            "LANGUAGE": "language",
            "create_or_replace_procedure_002": {
              "kind": "create_or_replace_procedure_002",
              "JAVASCRIPT": "javascript"
            },
            "AS": "AS",
            "MULTILINEJS": "        $$\n        var tpcdi_scale = SCALE\n        // Load historical file\n        var hist_stmt = snowflake.createStatement(\n                {sqlText: \"CALL TPCDI_STG.PUBLIC.LOAD_PROSPECT_SP(\" + tpcdi_scale + \",1,1,5)\"}\n                );\n        hist_stmt.execute();\n        // Stop task\n        var stoptask_stmt = snowflake.createStatement({sqlText: \"ALTER TASK TPCDI_STG.PUBLIC.LOAD_PROSPECT_H_\" + tpcdi_scale + \"_TSK SUSPEND\"});\n        stoptask_stmt.execute();\n        return \"All historical prospect files have been loaded.\";\n        $$"
          }
        },
        "SEMICOLON": ";"
      },
      {
        "kind": "sql_stmt_list_001",
        "sql_stmt": {
          "kind": "sql_stmt",
          "create_or_replace_procedure": {
            "kind": "create_or_replace_procedure",
            "create_replace": {
              "kind": "create_replace",
              "CREATE": "CREATE",
              "create_replace_001": {
                "kind": "create_replace_001",
                "OR": "OR",
                "REPLACE": "REPLACE"
              }
            },
            "PROCEDURE": "PROCEDURE",
            "proc_name": {
              "kind": "proc_name",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "TPCDI_STG"
                },
                "name_002": [
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "PUBLIC"
                    }
                  },
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "LOAD_PROSPECT_I_SP"
                    }
                  }
                ]
              }
            },
            "LEFT_PAREN": "(",
            "name_datatype_list": {
              "kind": "name_datatype_list",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "scale"
                }
              },
              "data_type": {
                "kind": "data_type",
                "numeric": {
                  "kind": "numeric",
                  "FLOAT": "float"
                }
              }
            },
            "RIGHT_PAREN": ")",
            "RETURNS": "returns",
            "create_or_replace_procedure_001": {
              "kind": "create_or_replace_procedure_001",
              "create_or_replace_procedure_001_000_001": {
                "kind": "create_or_replace_procedure_001_000_001",
                "data_type": {
                  "kind": "data_type",
                  "numeric": {
                    "kind": "numeric",
                    "FLOAT": "float"
                  }
                }
              }
            },
            "LANGUAGE": "language",
            "create_or_replace_procedure_002": {
              "kind": "create_or_replace_procedure_002",
              "JAVASCRIPT": "javascript"
            },
            "AS": "AS",
            "MULTILINEJS": "        $$\n        var tpcdi_scale = SCALE\n        // Load historical file\n        var hist_stmt = snowflake.createStatement(\n                {sqlText: \"CALL TPCDI_STG.PUBLIC.LOAD_PROSPECT_SP(\" + tpcdi_scale + \",3,2,60)\"}\n                );\n        hist_stmt.execute();\n        // Stop task\n        var stoptask_stmt = snowflake.createStatement({sqlText: \"ALTER TASK TPCDI_STG.PUBLIC.LOAD_PROSPECT_I_\" + tpcdi_scale + \"_TSK SUSPEND\"});\n        stoptask_stmt.execute();\n        return \"All incremental prospect files have been loaded.\";\n        $$"
          }
        },
        "SEMICOLON": ";"
      },
      {
        "kind": "sql_stmt_list_001",
        "sql_stmt": {
          "kind": "sql_stmt",
          "create_or_replace_procedure": {
            "kind": "create_or_replace_procedure",
            "create_replace": {
              "kind": "create_replace",
              "CREATE": "CREATE",
              "create_replace_001": {
                "kind": "create_replace_001",
                "OR": "OR",
                "REPLACE": "REPLACE"
              }
            },
            "PROCEDURE": "PROCEDURE",
            "proc_name": {
              "kind": "proc_name",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "TPCDI_STG"
                },
                "name_002": [
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "PUBLIC"
                    }
                  },
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "LOAD_PROSPECT_SP"
                    }
                  }
                ]
              }
            },
            "LEFT_PAREN": "(",
            "name_datatype_list": {
              "kind": "name_datatype_list",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "scale"
                }
              },
              "data_type": {
                "kind": "data_type",
                "numeric": {
                  "kind": "numeric",
                  "FLOAT": "float"
                }
              },
              "name_datatype_list_002": [
                {
                  "kind": "name_datatype_list_001",
                  "COMMA": ",",
                  "name": {
                    "kind": "name",
                    "var_name": {
                      "kind": "var_name",
                      "keywords": {
                        "kind": "keywords",
                        "FILES": "files"
                      }
                    }
                  },
                  "data_type": {
                    "kind": "data_type",
                    "numeric": {
                      "kind": "numeric",
                      "FLOAT": "float"
                    }
                  }
                },
                {
                  "kind": "name_datatype_list_001",
                  "COMMA": ",",
                  "name": {
                    "kind": "name",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "position"
                    }
                  },
                  "data_type": {
                    "kind": "data_type",
                    "numeric": {
                      "kind": "numeric",
                      "FLOAT": "float"
                    }
                  }
                },
                {
                  "kind": "name_datatype_list_001",
                  "COMMA": ",",
                  "name": {
                    "kind": "name",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "wait"
                    }
                  },
                  "data_type": {
                    "kind": "data_type",
                    "numeric": {
                      "kind": "numeric",
                      "FLOAT": "float"
                    }
                  }
                }
              ]
            },
            "RIGHT_PAREN": ")",
            "RETURNS": "returns",
            "create_or_replace_procedure_001": {
              "kind": "create_or_replace_procedure_001",
              "create_or_replace_procedure_001_000_001": {
                "kind": "create_or_replace_procedure_001_000_001",
                "data_type": {
                  "kind": "data_type",
                  "string_binary": {
                    "kind": "string_binary",
                    "STRING": "string"
                  }
                }
              }
            },
            "LANGUAGE": "language",
            "create_or_replace_procedure_002": {
              "kind": "create_or_replace_procedure_002",
              "JAVASCRIPT": "javascript"
            },
            "AS": "AS",
            "MULTILINEJS": "  $$\n  // Load historical and incremental files\n  var tpcdi_scale = SCALE\n  var file_counter = POSITION;\n  while (file_counter <= FILES)\n  {\n    var incrm_stmt = snowflake.createStatement(\n      {sqlText: \"COPY INTO TPCDI_STG.PUBLIC.PROSPECT_STG FROM @TPCDI_FILES/tmp/tpcdi/sf=\" + tpcdi_scale + \"/Batch\" + file_counter + \"/Prospect FILE_FORMAT = (FORMAT_NAME = 'TXT_CSV') ON_ERROR = SKIP_FILE\"}\n      );\n    incrm_stmt.execute();\n    // insert wait here\n    stmt = snowflake.createStatement({sqlText:\"call system$wait(\" + WAIT + \", 'SECONDS')\"});\n    rs = stmt.execute();\n    file_counter++\n  }\n  return \"All prospect files have been loaded.\";\n  $$"
          }
        },
        "SEMICOLON": ";"
      },
      {
        "kind": "sql_stmt_list_001",
        "sql_stmt": {
          "kind": "sql_stmt",
          "create_or_replace_procedure": {
            "kind": "create_or_replace_procedure",
            "create_replace": {
              "kind": "create_replace",
              "CREATE": "CREATE",
              "create_replace_001": {
                "kind": "create_replace_001",
                "OR": "OR",
                "REPLACE": "REPLACE"
              }
            },
            "PROCEDURE": "PROCEDURE",
            "proc_name": {
              "kind": "proc_name",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "TPCDI_STG"
                },
                "name_002": [
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "PUBLIC"
                    }
                  },
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "LOAD_REFERENCE_FILES_SP"
                    }
                  }
                ]
              }
            },
            "LEFT_PAREN": "(",
            "RIGHT_PAREN": ")",
            "RETURNS": "returns",
            "create_or_replace_procedure_001": {
              "kind": "create_or_replace_procedure_001",
              "create_or_replace_procedure_001_000_001": {
                "kind": "create_or_replace_procedure_001_000_001",
                "data_type": {
                  "kind": "data_type",
                  "string_binary": {
                    "kind": "string_binary",
                    "STRING": "string"
                  }
                }
              }
            },
            "LANGUAGE": "language",
            "create_or_replace_procedure_002": {
              "kind": "create_or_replace_procedure_002",
              "JAVASCRIPT": "javascript"
            },
            "AS": "AS",
            "MULTILINEJS": "  $$\n  // Load Reference Files\n  // Load DATE_STG\n  stmt = snowflake.createStatement(\n      {sqlText: \"CALL TPCDI_STG.PUBLIC.LOAD_DATE_SP()\"}\n    );\n  rs = stmt.execute();\n  // Load TIME_STG\n  stmt = snowflake.createStatement(\n      {sqlText: \"CALL TPCDI_STG.PUBLIC.LOAD_TIME_SP()\"}\n    );\n  rs = stmt.execute();\n  // Load TRADETYPE_STG\n  stmt = snowflake.createStatement(\n      {sqlText: \"CALL TPCDI_STG.PUBLIC.LOAD_TRADETYPE_SP()\"}\n    );\n  rs = stmt.execute();\n  // Load STATUSTYPE_STG\n  stmt = snowflake.createStatement(\n      {sqlText: \"CALL TPCDI_STG.PUBLIC.LOAD_STATUSTYPE_SP()\"}\n    );\n  rs = stmt.execute();\n  // Load TAXRATE_STG\n  stmt = snowflake.createStatement(\n      {sqlText: \"CALL TPCDI_STG.PUBLIC.LOAD_TAXRATE_SP()\"}\n    );\n  rs = stmt.execute();\n  // Load INDUSTRY_STG\n  stmt = snowflake.createStatement(\n      {sqlText: \"CALL TPCDI_STG.PUBLIC.LOAD_INDUSTRY_SP()\"}\n    );\n  rs = stmt.execute();\n  // Load HR_STG\n  stmt = snowflake.createStatement(\n      {sqlText: \"CALL TPCDI_STG.PUBLIC.LOAD_HR_SP()\"}\n    );\n  rs = stmt.execute();\n  rs.next();\n  return \"All reference files have been loaded.\";\n  $$"
          }
        },
        "SEMICOLON": ";"
      },
      {
        "kind": "sql_stmt_list_001",
        "sql_stmt": {
          "kind": "sql_stmt",
          "create_or_replace_procedure": {
            "kind": "create_or_replace_procedure",
            "create_replace": {
              "kind": "create_replace",
              "CREATE": "CREATE",
              "create_replace_001": {
                "kind": "create_replace_001",
                "OR": "OR",
                "REPLACE": "REPLACE"
              }
            },
            "PROCEDURE": "PROCEDURE",
            "proc_name": {
              "kind": "proc_name",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "TPCDI_STG"
                },
                "name_002": [
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "PUBLIC"
                    }
                  },
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "LOAD_STATUSTYPE_SP"
                    }
                  }
                ]
              }
            },
            "LEFT_PAREN": "(",
            "name_datatype_list": {
              "kind": "name_datatype_list",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "scale"
                }
              },
              "data_type": {
                "kind": "data_type",
                "numeric": {
                  "kind": "numeric",
                  "FLOAT": "float"
                }
              }
            },
            "RIGHT_PAREN": ")",
            "RETURNS": "returns",
            "create_or_replace_procedure_001": {
              "kind": "create_or_replace_procedure_001",
              "create_or_replace_procedure_001_000_001": {
                "kind": "create_or_replace_procedure_001_000_001",
                "data_type": {
                  "kind": "data_type",
                  "string_binary": {
                    "kind": "string_binary",
                    "STRING": "string"
                  }
                }
              }
            },
            "LANGUAGE": "language",
            "create_or_replace_procedure_002": {
              "kind": "create_or_replace_procedure_002",
              "JAVASCRIPT": "javascript"
            },
            "AS": "AS",
            "MULTILINEJS": "  $$\n  var tpcdi_scale = SCALE\n  // Load STATUSTYPE_STG\n  stmt = snowflake.createStatement(\n      {sqlText: \"COPY INTO TPCDI_STG.PUBLIC.STATUSTYPE_STG FROM @TPCDI_FILES/tmp/tpcdi/sf=\" + tpcdi_scale + \"/Batch1/StatusType.txt FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE') ON_ERROR = SKIP_FILE\"}\n    );\n  rs = stmt.execute();\n  rs.next();\n  // Stop task\n  var stoptask_stmt = snowflake.createStatement({sqlText: \"ALTER TASK TPCDI_STG.PUBLIC.LOAD_STATUSTYPE_\" + tpcdi_scale + \"_TSK SUSPEND\"});\n  stoptask_stmt.execute();\n  return \"All statustype files have been loaded.\";\n  $$"
          }
        },
        "SEMICOLON": ";"
      },
      {
        "kind": "sql_stmt_list_001",
        "sql_stmt": {
          "kind": "sql_stmt",
          "create_or_replace_procedure": {
            "kind": "create_or_replace_procedure",
            "create_replace": {
              "kind": "create_replace",
              "CREATE": "CREATE",
              "create_replace_001": {
                "kind": "create_replace_001",
                "OR": "OR",
                "REPLACE": "REPLACE"
              }
            },
            "PROCEDURE": "PROCEDURE",
            "proc_name": {
              "kind": "proc_name",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "TPCDI_STG"
                },
                "name_002": [
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "PUBLIC"
                    }
                  },
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "LOAD_TAXRATE_SP"
                    }
                  }
                ]
              }
            },
            "LEFT_PAREN": "(",
            "name_datatype_list": {
              "kind": "name_datatype_list",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "scale"
                }
              },
              "data_type": {
                "kind": "data_type",
                "numeric": {
                  "kind": "numeric",
                  "FLOAT": "float"
                }
              }
            },
            "RIGHT_PAREN": ")",
            "RETURNS": "returns",
            "create_or_replace_procedure_001": {
              "kind": "create_or_replace_procedure_001",
              "create_or_replace_procedure_001_000_001": {
                "kind": "create_or_replace_procedure_001_000_001",
                "data_type": {
                  "kind": "data_type",
                  "string_binary": {
                    "kind": "string_binary",
                    "STRING": "string"
                  }
                }
              }
            },
            "LANGUAGE": "language",
            "create_or_replace_procedure_002": {
              "kind": "create_or_replace_procedure_002",
              "JAVASCRIPT": "javascript"
            },
            "AS": "AS",
            "MULTILINEJS": "  $$\n  var tpcdi_scale = SCALE\n  // Load TAXRATE_STG\n  stmt = snowflake.createStatement(\n      {sqlText: \"COPY INTO TPCDI_STG.PUBLIC.TAXRATE_STG FROM @TPCDI_FILES/tmp/tpcdi/sf=\" + tpcdi_scale + \"/Batch1/TaxRate.txt FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE') ON_ERROR = SKIP_FILE\"}\n    );\n  rs = stmt.execute();\n  rs.next();\n  // Stop task\n  var stoptask_stmt = snowflake.createStatement({sqlText: \"ALTER TASK TPCDI_STG.PUBLIC.LOAD_TAXRATE_\" + tpcdi_scale + \"_TSK SUSPEND\"});\n  stoptask_stmt.execute();\n  return \"All taxrate files have been loaded.\";\n  $$"
          }
        },
        "SEMICOLON": ";"
      },
      {
        "kind": "sql_stmt_list_001",
        "sql_stmt": {
          "kind": "sql_stmt",
          "create_or_replace_procedure": {
            "kind": "create_or_replace_procedure",
            "create_replace": {
              "kind": "create_replace",
              "CREATE": "CREATE",
              "create_replace_001": {
                "kind": "create_replace_001",
                "OR": "OR",
                "REPLACE": "REPLACE"
              }
            },
            "PROCEDURE": "PROCEDURE",
            "proc_name": {
              "kind": "proc_name",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "TPCDI_STG"
                },
                "name_002": [
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "PUBLIC"
                    }
                  },
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "LOAD_TIME_SP"
                    }
                  }
                ]
              }
            },
            "LEFT_PAREN": "(",
            "name_datatype_list": {
              "kind": "name_datatype_list",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "scale"
                }
              },
              "data_type": {
                "kind": "data_type",
                "numeric": {
                  "kind": "numeric",
                  "FLOAT": "float"
                }
              }
            },
            "RIGHT_PAREN": ")",
            "RETURNS": "returns",
            "create_or_replace_procedure_001": {
              "kind": "create_or_replace_procedure_001",
              "create_or_replace_procedure_001_000_001": {
                "kind": "create_or_replace_procedure_001_000_001",
                "data_type": {
                  "kind": "data_type",
                  "string_binary": {
                    "kind": "string_binary",
                    "STRING": "string"
                  }
                }
              }
            },
            "LANGUAGE": "language",
            "create_or_replace_procedure_002": {
              "kind": "create_or_replace_procedure_002",
              "JAVASCRIPT": "javascript"
            },
            "AS": "AS",
            "MULTILINEJS": "  $$\n  var tpcdi_scale = SCALE\n  // Load TIME_STG\n  stmt = snowflake.createStatement(\n      {sqlText: \"COPY INTO TPCDI_STG.PUBLIC.TIME_STG FROM @TPCDI_FILES/tmp/tpcdi/sf=\" + tpcdi_scale + \"/Batch1/Time.txt FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE') ON_ERROR = SKIP_FILE\"}\n    );\n  rs = stmt.execute();\n  rs.next();\n  // Stop task\n  var stoptask_stmt = snowflake.createStatement({sqlText: \"ALTER TASK TPCDI_STG.PUBLIC.LOAD_TIME_\" + tpcdi_scale + \"_TSK SUSPEND\"});\n  stoptask_stmt.execute();\n  return \"All time files have been loaded.\";\n  $$"
          }
        },
        "SEMICOLON": ";"
      },
      {
        "kind": "sql_stmt_list_001",
        "sql_stmt": {
          "kind": "sql_stmt",
          "create_or_replace_procedure": {
            "kind": "create_or_replace_procedure",
            "create_replace": {
              "kind": "create_replace",
              "CREATE": "CREATE",
              "create_replace_001": {
                "kind": "create_replace_001",
                "OR": "OR",
                "REPLACE": "REPLACE"
              }
            },
            "PROCEDURE": "PROCEDURE",
            "proc_name": {
              "kind": "proc_name",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "TPCDI_STG"
                },
                "name_002": [
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "PUBLIC"
                    }
                  },
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "LOAD_TRADETYPE_SP"
                    }
                  }
                ]
              }
            },
            "LEFT_PAREN": "(",
            "name_datatype_list": {
              "kind": "name_datatype_list",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "scale"
                }
              },
              "data_type": {
                "kind": "data_type",
                "numeric": {
                  "kind": "numeric",
                  "FLOAT": "float"
                }
              }
            },
            "RIGHT_PAREN": ")",
            "RETURNS": "returns",
            "create_or_replace_procedure_001": {
              "kind": "create_or_replace_procedure_001",
              "create_or_replace_procedure_001_000_001": {
                "kind": "create_or_replace_procedure_001_000_001",
                "data_type": {
                  "kind": "data_type",
                  "string_binary": {
                    "kind": "string_binary",
                    "STRING": "string"
                  }
                }
              }
            },
            "LANGUAGE": "language",
            "create_or_replace_procedure_002": {
              "kind": "create_or_replace_procedure_002",
              "JAVASCRIPT": "javascript"
            },
            "AS": "AS",
            "MULTILINEJS": "  $$\n  var tpcdi_scale = SCALE\n  // Load TRADETYPE_STG\n  stmt = snowflake.createStatement(\n      {sqlText: \"COPY INTO TPCDI_STG.PUBLIC.TRADETYPE_STG FROM @TPCDI_FILES/tmp/tpcdi/sf=\" + tpcdi_scale + \"/Batch1/TradeType.txt FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE') ON_ERROR = SKIP_FILE\"}\n    );\n  rs = stmt.execute();\n  // Stop task\n  var stoptask_stmt = snowflake.createStatement({sqlText: \"ALTER TASK TPCDI_STG.PUBLIC.LOAD_TRADETYPE_\" + tpcdi_scale + \"_TSK SUSPEND\"});\n  stoptask_stmt.execute();\n  return \"All tradetype files have been loaded.\";\n  $$"
          }
        },
        "SEMICOLON": ";"
      },
      {
        "kind": "sql_stmt_list_001",
        "sql_stmt": {
          "kind": "sql_stmt",
          "create_or_replace_procedure": {
            "kind": "create_or_replace_procedure",
            "create_replace": {
              "kind": "create_replace",
              "CREATE": "CREATE",
              "create_replace_001": {
                "kind": "create_replace_001",
                "OR": "OR",
                "REPLACE": "REPLACE"
              }
            },
            "PROCEDURE": "PROCEDURE",
            "proc_name": {
              "kind": "proc_name",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "TPCDI_STG"
                },
                "name_002": [
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "PUBLIC"
                    }
                  },
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "LOAD_TRADE_H_SP"
                    }
                  }
                ]
              }
            },
            "LEFT_PAREN": "(",
            "name_datatype_list": {
              "kind": "name_datatype_list",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "scale"
                }
              },
              "data_type": {
                "kind": "data_type",
                "numeric": {
                  "kind": "numeric",
                  "FLOAT": "float"
                }
              }
            },
            "RIGHT_PAREN": ")",
            "RETURNS": "returns",
            "create_or_replace_procedure_001": {
              "kind": "create_or_replace_procedure_001",
              "create_or_replace_procedure_001_000_001": {
                "kind": "create_or_replace_procedure_001_000_001",
                "data_type": {
                  "kind": "data_type",
                  "numeric": {
                    "kind": "numeric",
                    "FLOAT": "float"
                  }
                }
              }
            },
            "LANGUAGE": "language",
            "create_or_replace_procedure_002": {
              "kind": "create_or_replace_procedure_002",
              "JAVASCRIPT": "javascript"
            },
            "AS": "AS",
            "MULTILINEJS": "        $$\n        var tpcdi_scale = SCALE\n        // Load historical file\n        var hist_stmt = snowflake.createStatement(\n                {sqlText: \"COPY INTO TPCDI_STG.PUBLIC.TRADE_STG(T_ID,T_DTS,T_ST_ID,T_TT_ID,T_IS_CASH,T_S_SYMB,T_QTY,T_BID_PRICE,T_CA_ID,T_EXEC_NAME,T_TRADE_PRICE,T_CHRG,T_COMM,T_TAX) FROM (SELECT $1 $3       ,$2 $4  ,$3 $5  ,$4 $6  ,$5 $7  ,$6 $8  ,$7 $9  ,$8 $10         ,$9 $11         ,$10 $12        ,$11 $13        ,$12 $14        ,$13 $15        ,$14 $16 FROM @TPCDI_FILES) FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE') PATTERN='.*//tpcdi/sf=\" + tpcdi_scale + \"/Batch1/Trade[^HT].*' ON_ERROR = SKIP_FILE\"}\n                );\n        hist_stmt.execute();\n        // Load trade history\n        var hist2_stmt = snowflake.createStatement(\n                {sqlText: \"COPY INTO TPCDI_STG.PUBLIC.TRADEHISTORY_STG FROM @TPCDI_FILES/tmp/tpcdi/sf=\" + tpcdi_scale + \"/Batch1/TradeHistory FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE') ON_ERROR = SKIP_FILE\"}\n                );\n        hist2_stmt.execute();\n        // Stop task\n        var stoptask_stmt = snowflake.createStatement({sqlText: \"ALTER TASK TPCDI_STG.PUBLIC.LOAD_TRADE_H_\" + tpcdi_scale + \"_TSK SUSPEND\"});\n        stoptask_stmt.execute();\n        return \"All historical trade and tradehistory files have been loaded.\";\n        $$"
          }
        },
        "SEMICOLON": ";"
      },
      {
        "kind": "sql_stmt_list_001",
        "sql_stmt": {
          "kind": "sql_stmt",
          "create_or_replace_procedure": {
            "kind": "create_or_replace_procedure",
            "create_replace": {
              "kind": "create_replace",
              "CREATE": "CREATE",
              "create_replace_001": {
                "kind": "create_replace_001",
                "OR": "OR",
                "REPLACE": "REPLACE"
              }
            },
            "PROCEDURE": "PROCEDURE",
            "proc_name": {
              "kind": "proc_name",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "TPCDI_STG"
                },
                "name_002": [
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "PUBLIC"
                    }
                  },
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "LOAD_TRADE_I_SP"
                    }
                  }
                ]
              }
            },
            "LEFT_PAREN": "(",
            "name_datatype_list": {
              "kind": "name_datatype_list",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "scale"
                }
              },
              "data_type": {
                "kind": "data_type",
                "numeric": {
                  "kind": "numeric",
                  "FLOAT": "float"
                }
              },
              "name_datatype_list_002": [
                {
                  "kind": "name_datatype_list_001",
                  "COMMA": ",",
                  "name": {
                    "kind": "name",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "batches"
                    }
                  },
                  "data_type": {
                    "kind": "data_type",
                    "numeric": {
                      "kind": "numeric",
                      "FLOAT": "float"
                    }
                  }
                },
                {
                  "kind": "name_datatype_list_001",
                  "COMMA": ",",
                  "name": {
                    "kind": "name",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "wait"
                    }
                  },
                  "data_type": {
                    "kind": "data_type",
                    "numeric": {
                      "kind": "numeric",
                      "FLOAT": "float"
                    }
                  }
                }
              ]
            },
            "RIGHT_PAREN": ")",
            "RETURNS": "returns",
            "create_or_replace_procedure_001": {
              "kind": "create_or_replace_procedure_001",
              "create_or_replace_procedure_001_000_001": {
                "kind": "create_or_replace_procedure_001_000_001",
                "data_type": {
                  "kind": "data_type",
                  "numeric": {
                    "kind": "numeric",
                    "FLOAT": "float"
                  }
                }
              }
            },
            "LANGUAGE": "language",
            "create_or_replace_procedure_002": {
              "kind": "create_or_replace_procedure_002",
              "JAVASCRIPT": "javascript"
            },
            "AS": "AS",
            "MULTILINEJS": "        $$\n        var tpcdi_scale = SCALE\n        // Load incremental files\n        var batch_counter = 1;\n        while (batch_counter <= BATCHES)\n        {\n                var incrm_stmt = snowflake.createStatement(\n                        {sqlText: \"COPY INTO TPCDI_STG.PUBLIC.TRADE_STG FROM @TPCDI_FILES/tmp/tpcdi/sf=\" + tpcdi_scale + \"/Batch\" + batch_counter + \"/Trade FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE') ON_ERROR = SKIP_FILE\"}\n                        );\n                incrm_stmt.execute();\n                // insert wait here\n                stmt = snowflake.createStatement({sqlText:\"call system$wait(\" + WAIT + \", 'SECONDS')\"});\n                rs = stmt.execute();\n                batch_counter++\n        }\n        // Suspend Load Task\n        var task_stmt = snowflake.createStatement({sqlText: \"ALTER TASK TPCDI_STG.PUBLIC.LOAD_TRADE_I_\" + tpcdi_scale + \"_TSK SUSPEND\"});\n        task_stmt.execute();\n        return \"All incremental trade files have been loaded.\";\n        $$"
          }
        },
        "SEMICOLON": ";"
      },
      {
        "kind": "sql_stmt_list_001",
        "sql_stmt": {
          "kind": "sql_stmt",
          "create_or_replace_procedure": {
            "kind": "create_or_replace_procedure",
            "create_replace": {
              "kind": "create_replace",
              "CREATE": "CREATE",
              "create_replace_001": {
                "kind": "create_replace_001",
                "OR": "OR",
                "REPLACE": "REPLACE"
              }
            },
            "PROCEDURE": "PROCEDURE",
            "proc_name": {
              "kind": "proc_name",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "TPCDI_STG"
                },
                "name_002": [
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "PUBLIC"
                    }
                  },
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "LOAD_TRADE_SP"
                    }
                  }
                ]
              }
            },
            "LEFT_PAREN": "(",
            "name_datatype_list": {
              "kind": "name_datatype_list",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "keywords": {
                    "kind": "keywords",
                    "FILES": "files"
                  }
                }
              },
              "data_type": {
                "kind": "data_type",
                "numeric": {
                  "kind": "numeric",
                  "FLOAT": "float"
                }
              },
              "name_datatype_list_002": [
                {
                  "kind": "name_datatype_list_001",
                  "COMMA": ",",
                  "name": {
                    "kind": "name",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "wait"
                    }
                  },
                  "data_type": {
                    "kind": "data_type",
                    "numeric": {
                      "kind": "numeric",
                      "FLOAT": "float"
                    }
                  }
                }
              ]
            },
            "RIGHT_PAREN": ")",
            "RETURNS": "returns",
            "create_or_replace_procedure_001": {
              "kind": "create_or_replace_procedure_001",
              "create_or_replace_procedure_001_000_001": {
                "kind": "create_or_replace_procedure_001_000_001",
                "data_type": {
                  "kind": "data_type",
                  "numeric": {
                    "kind": "numeric",
                    "FLOAT": "float"
                  }
                }
              }
            },
            "LANGUAGE": "language",
            "create_or_replace_procedure_002": {
              "kind": "create_or_replace_procedure_002",
              "JAVASCRIPT": "javascript"
            },
            "AS": "AS",
            "MULTILINEJS": "        $$\n        // Load historical file\n        var hist_stmt = snowflake.createStatement(\n                {sqlText: \"INSERT INTO TPCDI_STG.PUBLIC.TRADE_STG SELECT         TO_CHAR(NULL) $1       ,ROW_NUMBER() OVER (ORDER BY 1) $2      ,$1 $3  ,$2 $4  ,$3 $5  ,$4 $6  ,$5 $7  ,$6 $8  ,$7 $9  ,$8 $10         ,$9 $11         ,$10 $12        ,$11 $13        ,$12 $14        ,$13 $15        ,$14 $16 FROM @TPCDI_FILES/load/trade/Trade01.txt (FILE_FORMAT => 'TXT_PIPE')\"}\n                );\n        hist_stmt.execute();\n        // Load trade history\n        var hist2_stmt = snowflake.createStatement(\n                {sqlText: \"COPY INTO TPCDI_STG.PUBLIC.TRADEHISTORY_STG          FROM @TPCDI_FILES/load/trade_history/TradeHistory01.txt                 FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE') ON_ERROR = SKIP_FILE\"}\n                );\n        hist2_stmt.execute();\n        // Insert wait here\n        stmt = snowflake.createStatement({sqlText:\"call system$wait(\" + WAIT + \", 'SECONDS')\"});\n        rs = stmt.execute();\n        // Load incremental files\n        var file_counter = 2;\n        while (file_counter <= FILES)\n        {\n                var incrm_stmt = snowflake.createStatement(\n                        {sqlText: \"COPY INTO TPCDI_STG.PUBLIC.TRADE_STG FROM @TPCDI_FILES/load/trade/ FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE') PATTERN='.*0\" + file_counter + \".txt' ON_ERROR = SKIP_FILE\"}\n                        );\n                incrm_stmt.execute();\n                // insert wait here\n                stmt = snowflake.createStatement({sqlText:\"call system$wait(\" + WAIT + \", 'SECONDS')\"});\n                rs = stmt.execute();\n                file_counter++\n        }\n        return \"All trade and tradehistory files have been loaded.\";\n        $$"
          }
        },
        "SEMICOLON": ";"
      },
      {
        "kind": "sql_stmt_list_001",
        "sql_stmt": {
          "kind": "sql_stmt",
          "create_or_replace_procedure": {
            "kind": "create_or_replace_procedure",
            "create_replace": {
              "kind": "create_replace",
              "CREATE": "CREATE",
              "create_replace_001": {
                "kind": "create_replace_001",
                "OR": "OR",
                "REPLACE": "REPLACE"
              }
            },
            "PROCEDURE": "PROCEDURE",
            "proc_name": {
              "kind": "proc_name",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "TPCDI_STG"
                },
                "name_002": [
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "PUBLIC"
                    }
                  },
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "LOAD_WATCH_HISTORY_H_SP"
                    }
                  }
                ]
              }
            },
            "LEFT_PAREN": "(",
            "name_datatype_list": {
              "kind": "name_datatype_list",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "scale"
                }
              },
              "data_type": {
                "kind": "data_type",
                "numeric": {
                  "kind": "numeric",
                  "FLOAT": "float"
                }
              }
            },
            "RIGHT_PAREN": ")",
            "RETURNS": "returns",
            "create_or_replace_procedure_001": {
              "kind": "create_or_replace_procedure_001",
              "create_or_replace_procedure_001_000_001": {
                "kind": "create_or_replace_procedure_001_000_001",
                "data_type": {
                  "kind": "data_type",
                  "numeric": {
                    "kind": "numeric",
                    "FLOAT": "float"
                  }
                }
              }
            },
            "LANGUAGE": "language",
            "create_or_replace_procedure_002": {
              "kind": "create_or_replace_procedure_002",
              "JAVASCRIPT": "javascript"
            },
            "AS": "AS",
            "MULTILINEJS": "        $$\n        var tpcdi_scale = SCALE\n        // Load historical file\n        var hist_stmt = snowflake.createStatement(\n                {sqlText: \"COPY INTO TPCDI_STG.PUBLIC.WATCH_HISTORY_STG(W_C_ID,W_S_SYMB,W_DTS,W_ACTION) FROM (SELECT $1 $3      ,$2 $4  ,$3 $5  ,$4 $6 FROM @TPCDI_FILES/tmp/tpcdi/sf=\" + tpcdi_scale + \"/Batch1/WatchHistory) FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE') ON_ERROR = SKIP_FILE\"}\n                );\n        hist_stmt.execute();\n        // Stop task\n        var stoptask_stmt = snowflake.createStatement({sqlText: \"ALTER TASK TPCDI_STG.PUBLIC.LOAD_WATCH_HISTORY_H_\" + tpcdi_scale + \"_TSK SUSPEND\"});\n        stoptask_stmt.execute();\n        return \"All historical watch_history files have been loaded.\";\n        $$"
          }
        },
        "SEMICOLON": ";"
      },
      {
        "kind": "sql_stmt_list_001",
        "sql_stmt": {
          "kind": "sql_stmt",
          "create_or_replace_procedure": {
            "kind": "create_or_replace_procedure",
            "create_replace": {
              "kind": "create_replace",
              "CREATE": "CREATE",
              "create_replace_001": {
                "kind": "create_replace_001",
                "OR": "OR",
                "REPLACE": "REPLACE"
              }
            },
            "PROCEDURE": "PROCEDURE",
            "proc_name": {
              "kind": "proc_name",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "TPCDI_STG"
                },
                "name_002": [
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "PUBLIC"
                    }
                  },
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "LOAD_WATCH_HISTORY_I_SP"
                    }
                  }
                ]
              }
            },
            "LEFT_PAREN": "(",
            "name_datatype_list": {
              "kind": "name_datatype_list",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "scale"
                }
              },
              "data_type": {
                "kind": "data_type",
                "numeric": {
                  "kind": "numeric",
                  "FLOAT": "float"
                }
              },
              "name_datatype_list_002": [
                {
                  "kind": "name_datatype_list_001",
                  "COMMA": ",",
                  "name": {
                    "kind": "name",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "batches"
                    }
                  },
                  "data_type": {
                    "kind": "data_type",
                    "numeric": {
                      "kind": "numeric",
                      "FLOAT": "float"
                    }
                  }
                },
                {
                  "kind": "name_datatype_list_001",
                  "COMMA": ",",
                  "name": {
                    "kind": "name",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "wait"
                    }
                  },
                  "data_type": {
                    "kind": "data_type",
                    "numeric": {
                      "kind": "numeric",
                      "FLOAT": "float"
                    }
                  }
                }
              ]
            },
            "RIGHT_PAREN": ")",
            "RETURNS": "returns",
            "create_or_replace_procedure_001": {
              "kind": "create_or_replace_procedure_001",
              "create_or_replace_procedure_001_000_001": {
                "kind": "create_or_replace_procedure_001_000_001",
                "data_type": {
                  "kind": "data_type",
                  "numeric": {
                    "kind": "numeric",
                    "FLOAT": "float"
                  }
                }
              }
            },
            "LANGUAGE": "language",
            "create_or_replace_procedure_002": {
              "kind": "create_or_replace_procedure_002",
              "JAVASCRIPT": "javascript"
            },
            "AS": "AS",
            "MULTILINEJS": "        $$\n        var tpcdi_scale = SCALE\n        // Load incremental files\n        var batch_counter = 1;\n        while (batch_counter <= BATCHES)\n        {\n                var incrm_stmt = snowflake.createStatement(\n                        {sqlText: \"COPY INTO TPCDI_STG.PUBLIC.WATCH_HISTORY_STG FROM @TPCDI_FILES/tmp/tpcdi/sf=\" + tpcdi_scale + \"/Batch\" + batch_counter + \"/WatchHistory FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE') ON_ERROR = SKIP_FILE\"}\n                        );\n                incrm_stmt.execute();\n                // insert wait here\n                stmt = snowflake.createStatement({sqlText:\"call system$wait(\" + WAIT + \", 'SECONDS')\"});\n                rs = stmt.execute();\n                batch_counter++\n        }\n        // Suspend Load Task\n        var task_stmt = snowflake.createStatement({sqlText: \"ALTER TASK TPCDI_STG.PUBLIC.LOAD_WATCH_HISTORY_I_\" + tpcdi_scale + \"_TSK SUSPEND\"});\n        task_stmt.execute();\n        return \"All incremental watch_history files have been loaded.\";\n        $$"
          }
        },
        "SEMICOLON": ";"
      },
      {
        "kind": "sql_stmt_list_001",
        "sql_stmt": {
          "kind": "sql_stmt",
          "create_or_replace_procedure": {
            "kind": "create_or_replace_procedure",
            "create_replace": {
              "kind": "create_replace",
              "CREATE": "CREATE",
              "create_replace_001": {
                "kind": "create_replace_001",
                "OR": "OR",
                "REPLACE": "REPLACE"
              }
            },
            "PROCEDURE": "PROCEDURE",
            "proc_name": {
              "kind": "proc_name",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "TPCDI_STG"
                },
                "name_002": [
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "PUBLIC"
                    }
                  },
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "LOAD_WATCH_HISTORY_SP"
                    }
                  }
                ]
              }
            },
            "LEFT_PAREN": "(",
            "name_datatype_list": {
              "kind": "name_datatype_list",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "keywords": {
                    "kind": "keywords",
                    "FILES": "files"
                  }
                }
              },
              "data_type": {
                "kind": "data_type",
                "numeric": {
                  "kind": "numeric",
                  "FLOAT": "float"
                }
              },
              "name_datatype_list_002": [
                {
                  "kind": "name_datatype_list_001",
                  "COMMA": ",",
                  "name": {
                    "kind": "name",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "wait"
                    }
                  },
                  "data_type": {
                    "kind": "data_type",
                    "numeric": {
                      "kind": "numeric",
                      "FLOAT": "float"
                    }
                  }
                }
              ]
            },
            "RIGHT_PAREN": ")",
            "RETURNS": "returns",
            "create_or_replace_procedure_001": {
              "kind": "create_or_replace_procedure_001",
              "create_or_replace_procedure_001_000_001": {
                "kind": "create_or_replace_procedure_001_000_001",
                "data_type": {
                  "kind": "data_type",
                  "numeric": {
                    "kind": "numeric",
                    "FLOAT": "float"
                  }
                }
              }
            },
            "LANGUAGE": "language",
            "create_or_replace_procedure_002": {
              "kind": "create_or_replace_procedure_002",
              "JAVASCRIPT": "javascript"
            },
            "AS": "AS",
            "MULTILINEJS": "        $$\n        // Load historical file\n        var hist_stmt = snowflake.createStatement(\n                {sqlText: \"INSERT INTO TPCDI_STG.PUBLIC.WATCH_HISTORY_STG SELECT         TO_CHAR(NULL) $1       ,ROW_NUMBER() OVER (ORDER BY 1) $2      ,$1 $3  ,$2 $4  ,$3 $5  ,$4 $6 FROM @TPCDI_FILES/load/watch_history/WatchHistory01.txt (FILE_FORMAT => 'TXT_PIPE')\"}\n                );\n        hist_stmt.execute();\n        // Insert wait here\n        stmt = snowflake.createStatement({sqlText:\"call system$wait(\" + WAIT + \", 'SECONDS')\"});\n        rs = stmt.execute();\n        var file_counter = 2;\n        while (file_counter <= FILES)\n        {\n                var incrm_stmt = snowflake.createStatement(\n                        {sqlText: \"COPY INTO TPCDI_STG.PUBLIC.WATCH_HISTORY_STG FROM @TPCDI_FILES/load/watch_history/ FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE') PATTERN='.*0\" + file_counter + \".txt' ON_ERROR = SKIP_FILE\"}\n                        );\n                incrm_stmt.execute();\n                // insert wait here\n                stmt = snowflake.createStatement({sqlText:\"call system$wait(\" + WAIT + \", 'SECONDS')\"});\n                rs = stmt.execute();\n                file_counter++\n        }\n        return \"All watch_history files have been loaded.\";\n        $$"
          }
        },
        "SEMICOLON": ";"
      },
      {
        "kind": "sql_stmt_list_001",
        "sql_stmt": {
          "kind": "sql_stmt",
          "create_or_replace_procedure": {
            "kind": "create_or_replace_procedure",
            "create_replace": {
              "kind": "create_replace",
              "CREATE": "CREATE",
              "create_replace_001": {
                "kind": "create_replace_001",
                "OR": "OR",
                "REPLACE": "REPLACE"
              }
            },
            "PROCEDURE": "PROCEDURE",
            "proc_name": {
              "kind": "proc_name",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "TPCDI_STG"
                },
                "name_002": [
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "PUBLIC"
                    }
                  },
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "START_LOAD_HISTORICAL_TASKS_SP"
                    }
                  }
                ]
              }
            },
            "LEFT_PAREN": "(",
            "name_datatype_list": {
              "kind": "name_datatype_list",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "scale"
                }
              },
              "data_type": {
                "kind": "data_type",
                "numeric": {
                  "kind": "numeric",
                  "FLOAT": "float"
                }
              }
            },
            "RIGHT_PAREN": ")",
            "RETURNS": "returns",
            "create_or_replace_procedure_001": {
              "kind": "create_or_replace_procedure_001",
              "create_or_replace_procedure_001_000_001": {
                "kind": "create_or_replace_procedure_001_000_001",
                "data_type": {
                  "kind": "data_type",
                  "string_binary": {
                    "kind": "string_binary",
                    "STRING": "string"
                  }
                }
              }
            },
            "LANGUAGE": "language",
            "create_or_replace_procedure_002": {
              "kind": "create_or_replace_procedure_002",
              "JAVASCRIPT": "javascript"
            },
            "AS": "AS",
            "MULTILINEJS": "  $$\n  // Purpose: resume all tasks associated with loading historical files into the tpcdi_stg database\n  // tpcdi_scale is an input variable that represents the TPC-DI data size; 5,10,100,1000 are possible values\n  var tpcdi_scale = SCALE\n  var stmt = snowflake.createStatement({sqlText: \"EXECUTE TASK TPCDI_STG.PUBLIC.LOAD_DATE_\" + tpcdi_scale + \"_TSK\"});\n  stmt.execute();\n  var stmt = snowflake.createStatement({sqlText: \"EXECUTE TASK TPCDI_STG.PUBLIC.LOAD_TIME_\" + tpcdi_scale + \"_TSK\"});\n  stmt.execute();\n  var stmt = snowflake.createStatement({sqlText: \"EXECUTE TASK TPCDI_STG.PUBLIC.LOAD_TRADETYPE_\" + tpcdi_scale + \"_TSK\"});\n  stmt.execute();\n  var stmt = snowflake.createStatement({sqlText: \"EXECUTE TASK TPCDI_STG.PUBLIC.LOAD_STATUSTYPE_\" + tpcdi_scale + \"_TSK\"});\n  stmt.execute();\n  var stmt = snowflake.createStatement({sqlText: \"EXECUTE TASK TPCDI_STG.PUBLIC.LOAD_TAXRATE_\" + tpcdi_scale + \"_TSK\"});\n  stmt.execute();\n  var stmt = snowflake.createStatement({sqlText: \"EXECUTE TASK TPCDI_STG.PUBLIC.LOAD_INDUSTRY_\" + tpcdi_scale + \"_TSK\"});\n  stmt.execute();\n  var stmt = snowflake.createStatement({sqlText: \"EXECUTE TASK TPCDI_STG.PUBLIC.LOAD_HR_\" + tpcdi_scale + \"_TSK\"});\n  stmt.execute();\n  var stmt = snowflake.createStatement({sqlText: \"EXECUTE TASK TPCDI_STG.PUBLIC.LOAD_CUSTOMER_MGMT_\" + tpcdi_scale + \"_TSK\"});\n  stmt.execute();\n  var stmt = snowflake.createStatement({sqlText: \"EXECUTE TASK TPCDI_STG.PUBLIC.LOAD_FINWIRE_\" + tpcdi_scale + \"_TSK\"});\n  stmt.execute();\n  var stmt = snowflake.createStatement({sqlText:\"call system$wait(10, 'SECONDS')\"});\n  stmt.execute();\n  var stmt = snowflake.createStatement({sqlText: \"EXECUTE TASK TPCDI_STG.PUBLIC.LOAD_CASHTRANSACTION_H_\" + tpcdi_scale + \"_TSK\"});\n  stmt.execute();\n  var stmt = snowflake.createStatement({sqlText: \"EXECUTE TASK TPCDI_STG.PUBLIC.LOAD_DAILYMARKET_H_\" + tpcdi_scale + \"_TSK\"});\n  stmt.execute();\n  var stmt = snowflake.createStatement({sqlText: \"EXECUTE TASK TPCDI_STG.PUBLIC.LOAD_HOLDING_HISTORY_H_\" + tpcdi_scale + \"_TSK\"});\n  stmt.execute();\n  var stmt = snowflake.createStatement({sqlText: \"EXECUTE TASK TPCDI_STG.PUBLIC.LOAD_TRADE_H_\" + tpcdi_scale + \"_TSK\"});\n  stmt.execute();\n  var stmt = snowflake.createStatement({sqlText: \"EXECUTE TASK TPCDI_STG.PUBLIC.LOAD_WATCH_HISTORY_H_\" + tpcdi_scale + \"_TSK\"});\n  stmt.execute();\n  var stmt = snowflake.createStatement({sqlText: \"EXECUTE TASK TPCDI_STG.PUBLIC.LOAD_PROSPECT_H_\" + tpcdi_scale + \"_TSK \"});\n  stmt.execute();\n  return \"All historical load tasks started.\";\n  $$"
          }
        },
        "SEMICOLON": ";"
      },
      {
        "kind": "sql_stmt_list_001",
        "sql_stmt": {
          "kind": "sql_stmt",
          "create_or_replace_procedure": {
            "kind": "create_or_replace_procedure",
            "create_replace": {
              "kind": "create_replace",
              "CREATE": "CREATE",
              "create_replace_001": {
                "kind": "create_replace_001",
                "OR": "OR",
                "REPLACE": "REPLACE"
              }
            },
            "PROCEDURE": "PROCEDURE",
            "proc_name": {
              "kind": "proc_name",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "TPCDI_STG"
                },
                "name_002": [
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "PUBLIC"
                    }
                  },
                  {
                    "kind": "name_001",
                    "PERIOD": ".",
                    "var_name": {
                      "kind": "var_name",
                      "REGULAR_ID": "START_LOAD_INCREMENTAL_TASKS_SP"
                    }
                  }
                ]
              }
            },
            "LEFT_PAREN": "(",
            "name_datatype_list": {
              "kind": "name_datatype_list",
              "name": {
                "kind": "name",
                "var_name": {
                  "kind": "var_name",
                  "REGULAR_ID": "scale"
                }
              },
              "data_type": {
                "kind": "data_type",
                "numeric": {
                  "kind": "numeric",
                  "FLOAT": "float"
                }
              }
            },
            "RIGHT_PAREN": ")",
            "RETURNS": "returns",
            "create_or_replace_procedure_001": {
              "kind": "create_or_replace_procedure_001",
              "create_or_replace_procedure_001_000_001": {
                "kind": "create_or_replace_procedure_001_000_001",
                "data_type": {
                  "kind": "data_type",
                  "string_binary": {
                    "kind": "string_binary",
                    "STRING": "string"
                  }
                }
              }
            },
            "LANGUAGE": "language",
            "create_or_replace_procedure_002": {
              "kind": "create_or_replace_procedure_002",
              "JAVASCRIPT": "javascript"
            },
            "AS": "AS",
            "MULTILINEJS": "  $$\n  // Purpose:  all tasks associated with loading historical files into the tpcdi_stg database\n  // tpcdi_scale is an input variable that represents the TPC-DI data size; 5,10,100,1000 are possible values\n  var tpcdi_scale = SCALE\n  var stmt = snowflake.createStatement({sqlText: \"EXECUTE TASK TPCDI_STG.PUBLIC.LOAD_CUSTOMER_I_\" + tpcdi_scale + \"_TSK \"});\n  stmt.execute();\n  var stmt = snowflake.createStatement({sqlText: \"EXECUTE TASK TPCDI_STG.PUBLIC.LOAD_ACCOUNT_I_\" + tpcdi_scale + \"_TSK \"});\n  stmt.execute();\n  var stmt = snowflake.createStatement({sqlText: \"EXECUTE TASK TPCDI_STG.PUBLIC.LOAD_CASHTRANSACTION_I_\" + tpcdi_scale + \"_TSK \"});\n  stmt.execute();\n  var stmt = snowflake.createStatement({sqlText: \"EXECUTE TASK TPCDI_STG.PUBLIC.LOAD_DAILYMARKET_I_\" + tpcdi_scale + \"_TSK \"});\n  stmt.execute();\n  var stmt = snowflake.createStatement({sqlText: \"EXECUTE TASK TPCDI_STG.PUBLIC.LOAD_HOLDING_HISTORY_I_\" + tpcdi_scale + \"_TSK \"});\n  stmt.execute();\n  var stmt = snowflake.createStatement({sqlText: \"EXECUTE TASK TPCDI_STG.PUBLIC.LOAD_TRADE_I_\" + tpcdi_scale + \"_TSK \"});\n  stmt.execute();\n  var stmt = snowflake.createStatement({sqlText: \"EXECUTE TASK TPCDI_STG.PUBLIC.LOAD_WATCH_HISTORY_I_\" + tpcdi_scale + \"_TSK \"});\n  stmt.execute();\n  var stmt = snowflake.createStatement({sqlText: \"EXECUTE TASK TPCDI_STG.PUBLIC.LOAD_PROSPECT_I_\" + tpcdi_scale + \"_TSK \"});\n  stmt.execute();\n  return \"All incremental load tasks started.\";\n  $$"
          }
        },
        "SEMICOLON": ";"
      }
    ]
  },
  "captures": []
}