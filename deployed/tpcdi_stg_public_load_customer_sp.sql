-- Databricks notebook source
create or refresh streaming live table public_customer_stg
(CDC_FLAG string COMMENT 'DENOTES INSERT OR UPDATE',
 CDC_DSN INT COMMENT 'DATABASE SEQUENCE NUMBER',
 C_ID INT NOT NULL COMMENT 'CUSTOMER IDENTIFIER',
 C_TAX_ID string NOT NULL COMMENT 'CUSTOMERS TAX IDENTIFIER',
 C_ST_ID string COMMENT 'ACTV OR INAC CUSTOMER STATUS TYPE IDENTIFIER',
 C_L_NAME string NOT NULL COMMENT 'PRIMARY CUSTOMERS LAST NAME.',
 C_F_NAME string NOT NULL COMMENT 'PRIMARY CUSTOMERS FIRST NAME.',
 C_M_NAME string COMMENT 'PRIMARY CUSTOMERS MIDDLE INITIAL',
 C_GNDR string COMMENT 'GENDER OF THE PRIMARY CUSTOMER',
 C_TIER DECIMAL ( 1 ) COMMENT 'CUSTOMER TIER',
 C_DOB DATE NOT NULL COMMENT 'CUSTOMERS DATE OF BIRTH, AS YYYY-MM-DD.',
 C_ADLINE1 string NOT NULL COMMENT 'ADDRESS LINE 1',
 C_ADLINE2 string COMMENT 'ADDRESS LINE 2',
 C_ZIPCODE string NOT NULL COMMENT 'ZIP OR POSTAL CODE',
 C_CITY string NOT NULL COMMENT 'CITY',
 C_STATE_PROV string NOT NULL COMMENT 'STATE OR PROVINCE',
 C_CTRY string COMMENT 'COUNTRY',
 C_CTRY_1 string COMMENT 'COUNTRY CODE FOR CUSTOMERS PHONE 1.',
 C_AREA_1 string COMMENT 'AREA CODE FOR CUSTOMERS PHONE 1.',
 C_LOCAL_1 string COMMENT 'LOCAL NUMBER FOR CUSTOMERS PHONE 1.',
 C_EXT_1 string COMMENT 'EXTENSION NUMBER FOR CUSTOMERS PHONE 1.',
 C_CTRY_2 string COMMENT 'COUNTRY CODE FOR CUSTOMERS PHONE 2.',
 C_AREA_2 string COMMENT 'AREA CODE FOR CUSTOMERS PHONE 2.',
 C_LOCAL_2 string COMMENT 'LOCAL NUMBER FOR CUSTOMERS PHONE 2.',
 C_EXT_2 string COMMENT 'EXTENSION NUMBER FOR CUSTOMERS PHONE 2.',
 C_CTRY_3 string COMMENT 'COUNTRY CODE FOR CUSTOMERS PHONE 3.',
 C_AREA_3 string COMMENT 'AREA CODE FOR CUSTOMERS PHONE 3.',
 C_LOCAL_3 string COMMENT 'LOCAL NUMBER FOR CUSTOMERS PHONE 3.',
 C_EXT_3 string COMMENT 'EXTENSION NUMBER FOR CUSTOMERS PHONE 3.',
 C_EMAIL_1 string COMMENT 'CUSTOMERS E-MAIL ADDRESS 1.',
 C_EMAIL_2 string COMMENT 'CUSTOMERS E-MAIL ADDRESS 2.',
 C_LCL_TX_ID string NOT NULL COMMENT 'CUSTOMERS LOCAL TAX RATE',
 C_NAT_TX_ID string NOT NULL COMMENT 'CUSTOMERS NATIONAL TAX RATE')
using delta 
as select
 _c0::string CDC_FLAG, _c1::INT CDC_DSN, _c2::INT C_ID, _c3::string C_TAX_ID,
 _c4::string C_ST_ID, _c5::string C_L_NAME, _c6::string C_F_NAME,
 _c7::string C_M_NAME, _c8::string C_GNDR, _c9::DECIMAL(1) C_TIER,
 _c10::DATE C_DOB, _c11::string C_ADLINE1, _c12::string C_ADLINE2,
 _c13::string C_ZIPCODE, _c14::string C_CITY, _c15::string C_STATE_PROV,
 _c16::string C_CTRY, _c17::string C_CTRY_1, _c18::string C_AREA_1,
 _c19::string C_LOCAL_1, _c20::string C_EXT_1, _c21::string C_CTRY_2,
 _c22::string C_AREA_2, _c23::string C_LOCAL_2, _c24::string C_EXT_2,
 _c25::string C_CTRY_3, _c26::string C_AREA_3, _c27::string C_LOCAL_3,
 _c28::string C_EXT_3, _c29::string C_EMAIL_1, _c30::string C_EMAIL_2,
 _c31::string C_LCL_TX_ID, _c32::string C_NAT_TX_ID
from cloud_files(
                 --"s3://tpcdi-files/tmp/tpcdi/sf=${tpcdi_scale}/Batch[2-3]/Customer",
                 "s3://tpcdi-files/tmp/tpcdi/sf=1000/Batch[2-3]/Customer",
                 "csv",
                 map("inferSchema", "False", 
                     "header", "False",
                     "delimiter", "|")
                )
